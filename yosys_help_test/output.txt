
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.17+41 (git sha1 c525b5f91, clang 10.0.0-4ubuntu1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: counter/debounce.sv
Parsing SystemVerilog input from `counter/debounce.sv' to AST representation.
Storing AST representation for module `$abstract\debounce'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: counter/debounce_top.sv
Parsing SystemVerilog input from `counter/debounce_top.sv' to AST representation.
Storing AST representation for module `$abstract\debounce_top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: counter/mod_counter.sv
Parsing SystemVerilog input from `counter/mod_counter.sv' to AST representation.
Storing AST representation for module `$abstract\mod_counter'.
Successfully finished Verilog frontend.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Finding top of design hierarchy..
root of   0 design levels: $abstract\mod_counter
root of   0 design levels: $abstract\debounce_top
root of   0 design levels: $abstract\debounce  
Automatically selected $abstract\mod_counter as design top module.

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\mod_counter'.
Generating RTLIL representation for module `\mod_counter'.

4.3. Analyzing design hierarchy..
Top module:  \mod_counter

4.4. Analyzing design hierarchy..
Top module:  \mod_counter
Removing unused module `$abstract\mod_counter'.
Removing unused module `$abstract\debounce_top'.
Removing unused module `$abstract\debounce'.
Removed 3 unused modules.

5. Executing SYNTH_XILINX pass.

5.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\IBUFG'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\OBUFT'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFGCTRL'.
Generating RTLIL representation for module `\BUFHCE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT6_2'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\$__ABC9_LUT8'.
Generating RTLIL representation for module `\MUXCY'.
Generating RTLIL representation for module `\MUXF5'.
Generating RTLIL representation for module `\MUXF6'.
Generating RTLIL representation for module `\MUXF7'.
Generating RTLIL representation for module `\MUXF8'.
Generating RTLIL representation for module `\MUXF9'.
Generating RTLIL representation for module `\XORCY'.
Generating RTLIL representation for module `\CARRY4'.
Generating RTLIL representation for module `\CARRY8'.
Generating RTLIL representation for module `\ORCY'.
Generating RTLIL representation for module `\MULT_AND'.
Generating RTLIL representation for module `\FDRE'.
Generating RTLIL representation for module `\FDRE_1'.
Generating RTLIL representation for module `\FDSE'.
Generating RTLIL representation for module `\FDSE_1'.
Generating RTLIL representation for module `\FDRSE'.
Generating RTLIL representation for module `\FDRSE_1'.
Generating RTLIL representation for module `\FDCE'.
Generating RTLIL representation for module `\FDCE_1'.
Generating RTLIL representation for module `\FDPE'.
Generating RTLIL representation for module `\FDPE_1'.
Generating RTLIL representation for module `\FDCPE'.
Generating RTLIL representation for module `\FDCPE_1'.
Generating RTLIL representation for module `\LDCE'.
Generating RTLIL representation for module `\LDPE'.
Generating RTLIL representation for module `\LDCPE'.
Generating RTLIL representation for module `\AND2B1L'.
Generating RTLIL representation for module `\OR2L'.
Generating RTLIL representation for module `\RAM16X1S'.
Generating RTLIL representation for module `\RAM16X1S_1'.
Generating RTLIL representation for module `\RAM32X1S'.
Generating RTLIL representation for module `\RAM32X1S_1'.
Generating RTLIL representation for module `\RAM64X1S'.
Generating RTLIL representation for module `\RAM64X1S_1'.
Generating RTLIL representation for module `\RAM128X1S'.
Generating RTLIL representation for module `\RAM128X1S_1'.
Generating RTLIL representation for module `\RAM256X1S'.
Generating RTLIL representation for module `\RAM512X1S'.
Generating RTLIL representation for module `\RAM16X2S'.
Generating RTLIL representation for module `\RAM32X2S'.
Generating RTLIL representation for module `\RAM64X2S'.
Generating RTLIL representation for module `\RAM16X4S'.
Generating RTLIL representation for module `\RAM32X4S'.
Generating RTLIL representation for module `\RAM16X8S'.
Generating RTLIL representation for module `\RAM32X8S'.
Generating RTLIL representation for module `\RAM16X1D'.
Generating RTLIL representation for module `\RAM16X1D_1'.
Generating RTLIL representation for module `\RAM32X1D'.
Generating RTLIL representation for module `\RAM32X1D_1'.
Generating RTLIL representation for module `\RAM64X1D'.
Generating RTLIL representation for module `\RAM64X1D_1'.
Generating RTLIL representation for module `\RAM128X1D'.
Generating RTLIL representation for module `\RAM256X1D'.
Generating RTLIL representation for module `\RAM32M'.
Generating RTLIL representation for module `\RAM32M16'.
Generating RTLIL representation for module `\RAM64M'.
Generating RTLIL representation for module `\RAM64M8'.
Generating RTLIL representation for module `\RAM32X16DR8'.
Generating RTLIL representation for module `\RAM64X8SW'.
Generating RTLIL representation for module `\ROM16X1'.
Generating RTLIL representation for module `\ROM32X1'.
Generating RTLIL representation for module `\ROM64X1'.
Generating RTLIL representation for module `\ROM128X1'.
Generating RTLIL representation for module `\ROM256X1'.
Generating RTLIL representation for module `\SRL16'.
Generating RTLIL representation for module `\SRL16E'.
Generating RTLIL representation for module `\SRLC16'.
Generating RTLIL representation for module `\SRLC16E'.
Generating RTLIL representation for module `\SRLC32E'.
Generating RTLIL representation for module `\CFGLUT5'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT18X18S'.
Generating RTLIL representation for module `\MULT18X18SIO'.
Generating RTLIL representation for module `\DSP48A'.
Generating RTLIL representation for module `\DSP48A1'.
Generating RTLIL representation for module `\DSP48'.
Generating RTLIL representation for module `\DSP48E1'.
Generating RTLIL representation for module `\RAMB18E1'.
Generating RTLIL representation for module `\RAMB36E1'.
Successfully finished Verilog frontend.

5.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/cells_xtra.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\RAMB4_S1'.
Generating RTLIL representation for module `\RAMB4_S2'.
Generating RTLIL representation for module `\RAMB4_S4'.
Generating RTLIL representation for module `\RAMB4_S8'.
Generating RTLIL representation for module `\RAMB4_S16'.
Generating RTLIL representation for module `\RAMB4_S1_S1'.
Generating RTLIL representation for module `\RAMB4_S1_S2'.
Generating RTLIL representation for module `\RAMB4_S1_S4'.
Generating RTLIL representation for module `\RAMB4_S1_S8'.
Generating RTLIL representation for module `\RAMB4_S1_S16'.
Generating RTLIL representation for module `\RAMB4_S2_S2'.
Generating RTLIL representation for module `\RAMB4_S2_S4'.
Generating RTLIL representation for module `\RAMB4_S2_S8'.
Generating RTLIL representation for module `\RAMB4_S2_S16'.
Generating RTLIL representation for module `\RAMB4_S4_S4'.
Generating RTLIL representation for module `\RAMB4_S4_S8'.
Generating RTLIL representation for module `\RAMB4_S4_S16'.
Generating RTLIL representation for module `\RAMB4_S8_S8'.
Generating RTLIL representation for module `\RAMB4_S8_S16'.
Generating RTLIL representation for module `\RAMB4_S16_S16'.
Generating RTLIL representation for module `\RAMB16_S1'.
Generating RTLIL representation for module `\RAMB16_S2'.
Generating RTLIL representation for module `\RAMB16_S4'.
Generating RTLIL representation for module `\RAMB16_S9'.
Generating RTLIL representation for module `\RAMB16_S18'.
Generating RTLIL representation for module `\RAMB16_S36'.
Generating RTLIL representation for module `\RAMB16_S1_S1'.
Generating RTLIL representation for module `\RAMB16_S1_S2'.
Generating RTLIL representation for module `\RAMB16_S1_S4'.
Generating RTLIL representation for module `\RAMB16_S1_S9'.
Generating RTLIL representation for module `\RAMB16_S1_S18'.
Generating RTLIL representation for module `\RAMB16_S1_S36'.
Generating RTLIL representation for module `\RAMB16_S2_S2'.
Generating RTLIL representation for module `\RAMB16_S2_S4'.
Generating RTLIL representation for module `\RAMB16_S2_S9'.
Generating RTLIL representation for module `\RAMB16_S2_S18'.
Generating RTLIL representation for module `\RAMB16_S2_S36'.
Generating RTLIL representation for module `\RAMB16_S4_S4'.
Generating RTLIL representation for module `\RAMB16_S4_S9'.
Generating RTLIL representation for module `\RAMB16_S4_S18'.
Generating RTLIL representation for module `\RAMB16_S4_S36'.
Generating RTLIL representation for module `\RAMB16_S9_S9'.
Generating RTLIL representation for module `\RAMB16_S9_S18'.
Generating RTLIL representation for module `\RAMB16_S9_S36'.
Generating RTLIL representation for module `\RAMB16_S18_S18'.
Generating RTLIL representation for module `\RAMB16_S18_S36'.
Generating RTLIL representation for module `\RAMB16_S36_S36'.
Generating RTLIL representation for module `\RAMB16BWE_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36'.
Generating RTLIL representation for module `\RAMB16BWE_S18_S9'.
Generating RTLIL representation for module `\RAMB16BWE_S18_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S9'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S36'.
Generating RTLIL representation for module `\RAMB16BWER'.
Generating RTLIL representation for module `\RAMB8BWER'.
Generating RTLIL representation for module `\FIFO16'.
Generating RTLIL representation for module `\RAMB16'.
Generating RTLIL representation for module `\RAMB32_S64_ECC'.
Generating RTLIL representation for module `\FIFO18'.
Generating RTLIL representation for module `\FIFO18_36'.
Generating RTLIL representation for module `\FIFO36'.
Generating RTLIL representation for module `\FIFO36_72'.
Generating RTLIL representation for module `\RAMB18'.
Generating RTLIL representation for module `\RAMB36'.
Generating RTLIL representation for module `\RAMB18SDP'.
Generating RTLIL representation for module `\RAMB36SDP'.
Generating RTLIL representation for module `\FIFO18E1'.
Generating RTLIL representation for module `\FIFO36E1'.
Generating RTLIL representation for module `\FIFO18E2'.
Generating RTLIL representation for module `\FIFO36E2'.
Generating RTLIL representation for module `\RAMB18E2'.
Generating RTLIL representation for module `\RAMB36E2'.
Generating RTLIL representation for module `\URAM288'.
Generating RTLIL representation for module `\URAM288_BASE'.
Generating RTLIL representation for module `\DSP48E'.
Generating RTLIL representation for module `\DSP48E2'.
Generating RTLIL representation for module `\FDDRCPE'.
Generating RTLIL representation for module `\FDDRRSE'.
Generating RTLIL representation for module `\IFDDRCPE'.
Generating RTLIL representation for module `\IFDDRRSE'.
Generating RTLIL representation for module `\OFDDRCPE'.
Generating RTLIL representation for module `\OFDDRRSE'.
Generating RTLIL representation for module `\OFDDRTCPE'.
Generating RTLIL representation for module `\OFDDRTRSE'.
Generating RTLIL representation for module `\IDDR2'.
Generating RTLIL representation for module `\ODDR2'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDR_2CLK'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\IDELAYCTRL'.
Generating RTLIL representation for module `\IDELAY'.
Generating RTLIL representation for module `\ISERDES'.
Generating RTLIL representation for module `\OSERDES'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\ISERDES_NODELAY'.
Generating RTLIL representation for module `\IODELAYE1'.
Generating RTLIL representation for module `\ISERDESE1'.
Generating RTLIL representation for module `\OSERDESE1'.
Generating RTLIL representation for module `\IDELAYE2'.
Generating RTLIL representation for module `\ODELAYE2'.
Generating RTLIL representation for module `\ISERDESE2'.
Generating RTLIL representation for module `\OSERDESE2'.
Generating RTLIL representation for module `\PHASER_IN'.
Generating RTLIL representation for module `\PHASER_IN_PHY'.
Generating RTLIL representation for module `\PHASER_OUT'.
Generating RTLIL representation for module `\PHASER_OUT_PHY'.
Generating RTLIL representation for module `\PHASER_REF'.
Generating RTLIL representation for module `\PHY_CONTROL'.
Generating RTLIL representation for module `\IDDRE1'.
Generating RTLIL representation for module `\ODDRE1'.
Generating RTLIL representation for module `\IDELAYE3'.
Generating RTLIL representation for module `\ODELAYE3'.
Generating RTLIL representation for module `\ISERDESE3'.
Generating RTLIL representation for module `\OSERDESE3'.
Generating RTLIL representation for module `\BITSLICE_CONTROL'.
Generating RTLIL representation for module `\RIU_OR'.
Generating RTLIL representation for module `\RX_BITSLICE'.
Generating RTLIL representation for module `\RXTX_BITSLICE'.
Generating RTLIL representation for module `\TX_BITSLICE'.
Generating RTLIL representation for module `\TX_BITSLICE_TRI'.
Generating RTLIL representation for module `\IODELAY2'.
Generating RTLIL representation for module `\IODRP2'.
Generating RTLIL representation for module `\IODRP2_MCB'.
Generating RTLIL representation for module `\ISERDES2'.
Generating RTLIL representation for module `\OSERDES2'.
Generating RTLIL representation for module `\IBUF_DLY_ADJ'.
Generating RTLIL representation for module `\IBUF_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUF_ANALOG'.
Generating RTLIL representation for module `\IBUFE3'.
Generating RTLIL representation for module `\IBUFDS'.
Generating RTLIL representation for module `\IBUFDS_DLY_ADJ'.
Generating RTLIL representation for module `\IBUFDS_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDSE3'.
Generating RTLIL representation for module `\IBUFDS_DPHY'.
Generating RTLIL representation for module `\IBUFGDS'.
Generating RTLIL representation for module `\IBUFGDS_DIFF_OUT'.
Generating RTLIL representation for module `\IOBUF_DCIEN'.
Generating RTLIL representation for module `\IOBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFE3'.
Generating RTLIL representation for module `\IOBUFDS'.
Generating RTLIL representation for module `\IOBUFDS_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFDSE3'.
Generating RTLIL representation for module `\OBUFDS'.
Generating RTLIL representation for module `\OBUFDS_DPHY'.
Generating RTLIL representation for module `\OBUFTDS'.
Generating RTLIL representation for module `\KEEPER'.
Generating RTLIL representation for module `\PULLDOWN'.
Generating RTLIL representation for module `\PULLUP'.
Generating RTLIL representation for module `\DCIRESET'.
Generating RTLIL representation for module `\HPIO_VREF'.
Generating RTLIL representation for module `\BUFGCE'.
Generating RTLIL representation for module `\BUFGCE_1'.
Generating RTLIL representation for module `\BUFGMUX'.
Generating RTLIL representation for module `\BUFGMUX_1'.
Generating RTLIL representation for module `\BUFGMUX_CTRL'.
Generating RTLIL representation for module `\BUFGMUX_VIRTEX4'.
Generating RTLIL representation for module `\BUFG_GT'.
Generating RTLIL representation for module `\BUFG_GT_SYNC'.
Generating RTLIL representation for module `\BUFG_PS'.
Generating RTLIL representation for module `\BUFGCE_DIV'.
Generating RTLIL representation for module `\BUFH'.
Generating RTLIL representation for module `\BUFIO2'.
Generating RTLIL representation for module `\BUFIO2_2CLK'.
Generating RTLIL representation for module `\BUFIO2FB'.
Generating RTLIL representation for module `\BUFPLL'.
Generating RTLIL representation for module `\BUFPLL_MCB'.
Generating RTLIL representation for module `\BUFIO'.
Generating RTLIL representation for module `\BUFIODQS'.
Generating RTLIL representation for module `\BUFR'.
Generating RTLIL representation for module `\BUFMR'.
Generating RTLIL representation for module `\BUFMRCE'.
Generating RTLIL representation for module `\DCM'.
Generating RTLIL representation for module `\DCM_SP'.
Generating RTLIL representation for module `\DCM_CLKGEN'.
Generating RTLIL representation for module `\DCM_ADV'.
Generating RTLIL representation for module `\DCM_BASE'.
Generating RTLIL representation for module `\DCM_PS'.
Generating RTLIL representation for module `\PMCD'.
Generating RTLIL representation for module `\PLL_ADV'.
Generating RTLIL representation for module `\PLL_BASE'.
Generating RTLIL representation for module `\MMCM_ADV'.
Generating RTLIL representation for module `\MMCM_BASE'.
Generating RTLIL representation for module `\MMCME2_ADV'.
Generating RTLIL representation for module `\MMCME2_BASE'.
Generating RTLIL representation for module `\PLLE2_ADV'.
Generating RTLIL representation for module `\PLLE2_BASE'.
Generating RTLIL representation for module `\MMCME3_ADV'.
Generating RTLIL representation for module `\MMCME3_BASE'.
Generating RTLIL representation for module `\PLLE3_ADV'.
Generating RTLIL representation for module `\PLLE3_BASE'.
Generating RTLIL representation for module `\MMCME4_ADV'.
Generating RTLIL representation for module `\MMCME4_BASE'.
Generating RTLIL representation for module `\PLLE4_ADV'.
Generating RTLIL representation for module `\PLLE4_BASE'.
Generating RTLIL representation for module `\BUFT'.
Generating RTLIL representation for module `\IN_FIFO'.
Generating RTLIL representation for module `\OUT_FIFO'.
Generating RTLIL representation for module `\HARD_SYNC'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3E'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3A'.
Generating RTLIL representation for module `\STARTUP_SPARTAN6'.
Generating RTLIL representation for module `\STARTUP_VIRTEX4'.
Generating RTLIL representation for module `\STARTUP_VIRTEX5'.
Generating RTLIL representation for module `\STARTUP_VIRTEX6'.
Generating RTLIL representation for module `\STARTUPE2'.
Generating RTLIL representation for module `\STARTUPE3'.
Generating RTLIL representation for module `\CAPTURE_SPARTAN3'.
Generating RTLIL representation for module `\CAPTURE_SPARTAN3A'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX4'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX5'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX6'.
Generating RTLIL representation for module `\CAPTUREE2'.
Generating RTLIL representation for module `\ICAP_SPARTAN3A'.
Generating RTLIL representation for module `\ICAP_SPARTAN6'.
Generating RTLIL representation for module `\ICAP_VIRTEX4'.
Generating RTLIL representation for module `\ICAP_VIRTEX5'.
Generating RTLIL representation for module `\ICAP_VIRTEX6'.
Generating RTLIL representation for module `\ICAPE2'.
Generating RTLIL representation for module `\ICAPE3'.
Generating RTLIL representation for module `\BSCAN_SPARTAN3'.
Generating RTLIL representation for module `\BSCAN_SPARTAN3A'.
Generating RTLIL representation for module `\BSCAN_SPARTAN6'.
Generating RTLIL representation for module `\BSCAN_VIRTEX4'.
Generating RTLIL representation for module `\BSCAN_VIRTEX5'.
Generating RTLIL representation for module `\BSCAN_VIRTEX6'.
Generating RTLIL representation for module `\BSCANE2'.
Generating RTLIL representation for module `\DNA_PORT'.
Generating RTLIL representation for module `\DNA_PORTE2'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX4'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX5'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX6'.
Generating RTLIL representation for module `\FRAME_ECCE2'.
Generating RTLIL representation for module `\FRAME_ECCE3'.
Generating RTLIL representation for module `\FRAME_ECCE4'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX4'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX5'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX6'.
Generating RTLIL representation for module `\USR_ACCESSE2'.
Generating RTLIL representation for module `\POST_CRC_INTERNAL'.
Generating RTLIL representation for module `\SUSPEND_SYNC'.
Generating RTLIL representation for module `\KEY_CLEAR'.
Generating RTLIL representation for module `\MASTER_JTAG'.
Generating RTLIL representation for module `\SPI_ACCESS'.
Generating RTLIL representation for module `\EFUSE_USR'.
Generating RTLIL representation for module `\SYSMON'.
Generating RTLIL representation for module `\XADC'.
Generating RTLIL representation for module `\SYSMONE1'.
Generating RTLIL representation for module `\SYSMONE4'.
Generating RTLIL representation for module `\GTPA1_DUAL'.
Generating RTLIL representation for module `\GT11_CUSTOM'.
Generating RTLIL representation for module `\GT11_DUAL'.
Generating RTLIL representation for module `\GT11CLK'.
Generating RTLIL representation for module `\GT11CLK_MGT'.
Generating RTLIL representation for module `\GTP_DUAL'.
Generating RTLIL representation for module `\GTX_DUAL'.
Generating RTLIL representation for module `\CRC32'.
Generating RTLIL representation for module `\CRC64'.
Generating RTLIL representation for module `\GTHE1_QUAD'.
Generating RTLIL representation for module `\GTXE1'.
Generating RTLIL representation for module `\IBUFDS_GTXE1'.
Generating RTLIL representation for module `\IBUFDS_GTHE1'.
Generating RTLIL representation for module `\GTHE2_CHANNEL'.
Generating RTLIL representation for module `\GTHE2_COMMON'.
Generating RTLIL representation for module `\GTPE2_CHANNEL'.
Generating RTLIL representation for module `\GTPE2_COMMON'.
Generating RTLIL representation for module `\GTXE2_CHANNEL'.
Generating RTLIL representation for module `\GTXE2_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE2'.
Generating RTLIL representation for module `\GTHE3_CHANNEL'.
Generating RTLIL representation for module `\GTHE3_COMMON'.
Generating RTLIL representation for module `\GTYE3_CHANNEL'.
Generating RTLIL representation for module `\GTYE3_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE3'.
Generating RTLIL representation for module `\OBUFDS_GTE3'.
Generating RTLIL representation for module `\OBUFDS_GTE3_ADV'.
Generating RTLIL representation for module `\GTHE4_CHANNEL'.
Generating RTLIL representation for module `\GTHE4_COMMON'.
Generating RTLIL representation for module `\GTYE4_CHANNEL'.
Generating RTLIL representation for module `\GTYE4_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE4'.
Generating RTLIL representation for module `\OBUFDS_GTE4'.
Generating RTLIL representation for module `\OBUFDS_GTE4_ADV'.
Generating RTLIL representation for module `\GTM_DUAL'.
Generating RTLIL representation for module `\IBUFDS_GTM'.
Generating RTLIL representation for module `\OBUFDS_GTM'.
Generating RTLIL representation for module `\OBUFDS_GTM_ADV'.
Generating RTLIL representation for module `\HSDAC'.
Generating RTLIL representation for module `\HSADC'.
Generating RTLIL representation for module `\RFDAC'.
Generating RTLIL representation for module `\RFADC'.
Generating RTLIL representation for module `\PCIE_A1'.
Generating RTLIL representation for module `\PCIE_EP'.
Generating RTLIL representation for module `\PCIE_2_0'.
Generating RTLIL representation for module `\PCIE_2_1'.
Generating RTLIL representation for module `\PCIE_3_0'.
Generating RTLIL representation for module `\PCIE_3_1'.
Generating RTLIL representation for module `\PCIE40E4'.
Generating RTLIL representation for module `\PCIE4CE4'.
Generating RTLIL representation for module `\EMAC'.
Generating RTLIL representation for module `\TEMAC'.
Generating RTLIL representation for module `\TEMAC_SINGLE'.
Generating RTLIL representation for module `\CMAC'.
Generating RTLIL representation for module `\CMACE4'.
Generating RTLIL representation for module `\MCB'.
Generating RTLIL representation for module `\HBM_REF_CLK'.
Generating RTLIL representation for module `\HBM_SNGLBLI_INTF_APB'.
Generating RTLIL representation for module `\HBM_SNGLBLI_INTF_AXI'.
Generating RTLIL representation for module `\HBM_ONE_STACK_INTF'.
Generating RTLIL representation for module `\HBM_TWO_STACK_INTF'.
Generating RTLIL representation for module `\PPC405_ADV'.
Generating RTLIL representation for module `\PPC440'.
Generating RTLIL representation for module `\PS7'.
Generating RTLIL representation for module `\PS8'.
Generating RTLIL representation for module `\ILKN'.
Generating RTLIL representation for module `\ILKNE4'.
Generating RTLIL representation for module `\VCU'.
Generating RTLIL representation for module `\FE'.
Successfully finished Verilog frontend.

5.3. Executing HIERARCHY pass (managing design hierarchy).

5.3.1. Analyzing design hierarchy..
Top module:  \mod_counter

5.3.2. Analyzing design hierarchy..
Top module:  \mod_counter
Removed 0 unused modules.

5.4. Executing PROC pass (convert processes to netlists).

5.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105 in module RAM64M.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933 in module RAM32M.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$863 in module RAM128X1D.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$815 in module RAM64X1D.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$788 in module RAM32X1D_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$749 in module RAM32X1D.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$612 in module FDPE_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$609 in module FDPE.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$594 in module FDCE_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$591 in module FDCE.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$576 in module FDSE_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$572 in module FDSE.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$554 in module FDRE_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$550 in module FDRE.
Marked 1 switch rules as full_case in process $proc$counter/mod_counter.sv:26$1 in module mod_counter.
Removed a total of 0 dead cases.

5.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 87 assignments to connections.

5.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2400$1310'.
  Set init value: \r = 0
Found init rule in `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2356$1303'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2324$1296'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2287$1293'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2259$1286'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1975$1211'.
  Set init value: \mem_d = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1974$1210'.
  Set init value: \mem_c = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1973$1209'.
  Set init value: \mem_b = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1972$1208'.
  Set init value: \mem_a = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1801$1059'.
  Set init value: \mem_d = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1800$1058'.
  Set init value: \mem_c = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1799$1057'.
  Set init value: \mem_b = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1798$1056'.
  Set init value: \mem_a = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1707$900'.
  Set init value: \mem = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1602$852'.
  Set init value: \mem = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1556$807'.
  Set init value: \mem = 0
Found init rule in `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1497$780'.
  Set init value: \mem = 0
Found init rule in `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$615'.
  Set init value: \Q = 1'1
Found init rule in `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$611'.
  Set init value: \Q = 1'1
Found init rule in `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$597'.
  Set init value: \Q = 1'0
Found init rule in `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$593'.
  Set init value: \Q = 1'0
Found init rule in `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$579'.
  Set init value: \Q = 1'1
Found init rule in `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$575'.
  Set init value: \Q = 1'1
Found init rule in `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$557'.
  Set init value: \Q = 1'0
Found init rule in `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$553'.
  Set init value: \Q = 1'0

5.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \PRE in `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$612'.
Found async reset \PRE in `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$609'.
Found async reset \CLR in `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$594'.
Found async reset \CLR in `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$591'.

5.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~23 debug messages>

5.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2400$1310'.
Creating decoders for process `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2408$1309'.
     1/1: $0\r[31:0]
Creating decoders for process `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2356$1303'.
Creating decoders for process `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2364$1302'.
     1/1: $0\r[15:0]
Creating decoders for process `\SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2324$1296'.
Creating decoders for process `\SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2327$1295'.
Creating decoders for process `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2287$1293'.
Creating decoders for process `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2294$1292'.
     1/1: $0\r[15:0]
Creating decoders for process `\SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2259$1286'.
Creating decoders for process `\SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2261$1285'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1975$1211'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1974$1210'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1973$1209'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1972$1208'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
     1/16: $1$lookahead\mem_d$1104[63:0]$1137
     2/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1094[63:0]$1132
     3/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1093[63:0]$1131
     4/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1095[5:0]$1133
     5/16: $1$lookahead\mem_c$1103[63:0]$1136
     6/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1091[63:0]$1129
     7/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1090[63:0]$1128
     8/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1092[5:0]$1130
     9/16: $1$lookahead\mem_b$1102[63:0]$1135
    10/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1088[63:0]$1126
    11/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1087[63:0]$1125
    12/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1089[5:0]$1127
    13/16: $1$lookahead\mem_a$1101[63:0]$1134
    14/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1085[63:0]$1123
    15/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1084[63:0]$1122
    16/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1086[5:0]$1124
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1801$1059'.
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1800$1058'.
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1799$1057'.
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1798$1056'.
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
     1/16: $1$lookahead\mem_d$932[63:0]$965
     2/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$914[63:0]$960
     3/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$913[63:0]$959
     4/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$915[31:0]$961
     5/16: $1$lookahead\mem_c$931[63:0]$964
     6/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$911[63:0]$957
     7/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$910[63:0]$956
     8/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$912[31:0]$958
     9/16: $1$lookahead\mem_b$930[63:0]$963
    10/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$908[63:0]$954
    11/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$907[63:0]$953
    12/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$909[31:0]$955
    13/16: $1$lookahead\mem_a$929[63:0]$962
    14/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$905[63:0]$951
    15/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$904[63:0]$950
    16/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$906[31:0]$952
Creating decoders for process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1707$900'.
Creating decoders for process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$863'.
     1/4: $1$lookahead\mem$862[127:0]$871
     2/4: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$857[127:0]$869
     3/4: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$856[127:0]$868
     4/4: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$858[6:0]$870
Creating decoders for process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1602$852'.
Creating decoders for process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$815'.
     1/4: $1$lookahead\mem$814[63:0]$823
     2/4: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$809[63:0]$821
     3/4: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$808[63:0]$820
     4/4: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$810[5:0]$822
Creating decoders for process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1556$807'.
Creating decoders for process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$788'.
     1/4: $1$lookahead\mem$787[31:0]$796
     2/4: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$782[31:0]$794
     3/4: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$781[31:0]$793
     4/4: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$783[4:0]$795
Creating decoders for process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1497$780'.
Creating decoders for process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$749'.
     1/4: $1$lookahead\mem$748[31:0]$757
     2/4: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$743[31:0]$755
     3/4: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$742[31:0]$754
     4/4: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$744[4:0]$756
Creating decoders for process `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$615'.
Creating decoders for process `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$612'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$611'.
Creating decoders for process `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$609'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$597'.
Creating decoders for process `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$594'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$593'.
Creating decoders for process `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$591'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$579'.
Creating decoders for process `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$576'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$575'.
Creating decoders for process `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$572'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$557'.
Creating decoders for process `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$554'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$553'.
Creating decoders for process `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$550'.
     1/1: $0\Q[0:0]
Creating decoders for process `\mod_counter.$proc$counter/mod_counter.sv:26$1'.
     1/1: $0\count[3:0]

5.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SRLC32E.\r' using process `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2408$1309'.
  created $dff cell `$procdff$1546' with positive edge clock.
Creating register for signal `\SRLC16E.\r' using process `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2364$1302'.
  created $dff cell `$procdff$1547' with positive edge clock.
Creating register for signal `\SRLC16.\r' using process `\SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2327$1295'.
  created $dff cell `$procdff$1548' with positive edge clock.
Creating register for signal `\SRL16E.\r' using process `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2294$1292'.
  created $dff cell `$procdff$1549' with positive edge clock.
Creating register for signal `\SRL16.\r' using process `\SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2261$1285'.
  created $dff cell `$procdff$1550' with positive edge clock.
Creating register for signal `\RAM64M.\mem_a' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1551' with positive edge clock.
Creating register for signal `\RAM64M.\mem_b' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1552' with positive edge clock.
Creating register for signal `\RAM64M.\mem_c' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1553' with positive edge clock.
Creating register for signal `\RAM64M.\mem_d' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1554' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1084' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1555' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1085' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1556' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1086' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1557' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1087' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1558' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1088' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1559' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1089' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1560' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1090' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1561' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1091' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1562' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1092' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1563' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1093' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1564' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1094' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1565' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1095' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1566' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_a$1101' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1567' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_b$1102' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1568' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_c$1103' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1569' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_d$1104' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
  created $dff cell `$procdff$1570' with positive edge clock.
Creating register for signal `\RAM32M.\mem_a' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1571' with positive edge clock.
Creating register for signal `\RAM32M.\mem_b' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1572' with positive edge clock.
Creating register for signal `\RAM32M.\mem_c' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1573' with positive edge clock.
Creating register for signal `\RAM32M.\mem_d' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1574' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$904' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1575' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$905' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1576' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$906' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1577' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$907' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1578' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$908' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1579' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$909' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1580' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$910' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1581' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$911' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1582' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$912' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1583' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$913' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1584' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$914' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1585' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$915' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1586' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_a$929' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1587' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_b$930' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1588' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_c$931' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1589' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_d$932' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
  created $dff cell `$procdff$1590' with positive edge clock.
Creating register for signal `\RAM128X1D.\mem' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$863'.
  created $dff cell `$procdff$1591' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$856' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$863'.
  created $dff cell `$procdff$1592' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$857' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$863'.
  created $dff cell `$procdff$1593' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$858' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$863'.
  created $dff cell `$procdff$1594' with positive edge clock.
Creating register for signal `\RAM128X1D.$lookahead\mem$862' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$863'.
  created $dff cell `$procdff$1595' with positive edge clock.
Creating register for signal `\RAM64X1D.\mem' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$815'.
  created $dff cell `$procdff$1596' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$808' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$815'.
  created $dff cell `$procdff$1597' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$809' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$815'.
  created $dff cell `$procdff$1598' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$810' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$815'.
  created $dff cell `$procdff$1599' with positive edge clock.
Creating register for signal `\RAM64X1D.$lookahead\mem$814' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$815'.
  created $dff cell `$procdff$1600' with positive edge clock.
Creating register for signal `\RAM32X1D_1.\mem' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$788'.
  created $dff cell `$procdff$1601' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$781' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$788'.
  created $dff cell `$procdff$1602' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$782' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$788'.
  created $dff cell `$procdff$1603' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$783' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$788'.
  created $dff cell `$procdff$1604' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$lookahead\mem$787' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$788'.
  created $dff cell `$procdff$1605' with negative edge clock.
Creating register for signal `\RAM32X1D.\mem' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$749'.
  created $dff cell `$procdff$1606' with positive edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$742' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$749'.
  created $dff cell `$procdff$1607' with positive edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$743' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$749'.
  created $dff cell `$procdff$1608' with positive edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$744' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$749'.
  created $dff cell `$procdff$1609' with positive edge clock.
Creating register for signal `\RAM32X1D.$lookahead\mem$748' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$749'.
  created $dff cell `$procdff$1610' with positive edge clock.
Creating register for signal `\FDPE_1.\Q' using process `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$612'.
  created $adff cell `$procdff$1611' with negative edge clock and positive level reset.
Creating register for signal `\FDPE.\Q' using process `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$609'.
  created $adff cell `$procdff$1612' with positive edge clock and positive level reset.
Creating register for signal `\FDCE_1.\Q' using process `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$594'.
  created $adff cell `$procdff$1613' with negative edge clock and positive level reset.
Creating register for signal `\FDCE.\Q' using process `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$591'.
  created $adff cell `$procdff$1614' with positive edge clock and positive level reset.
Creating register for signal `\FDSE_1.\Q' using process `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$576'.
  created $dff cell `$procdff$1615' with negative edge clock.
Creating register for signal `\FDSE.\Q' using process `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$572'.
  created $dff cell `$procdff$1616' with positive edge clock.
Creating register for signal `\FDRE_1.\Q' using process `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$554'.
  created $dff cell `$procdff$1617' with negative edge clock.
Creating register for signal `\FDRE.\Q' using process `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$550'.
  created $dff cell `$procdff$1618' with positive edge clock.
Creating register for signal `\mod_counter.\count' using process `\mod_counter.$proc$counter/mod_counter.sv:26$1'.
  created $dff cell `$procdff$1619' with positive edge clock.

5.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2400$1310'.
Found and cleaned up 1 empty switch in `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2408$1309'.
Removing empty process `SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2408$1309'.
Removing empty process `SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2356$1303'.
Found and cleaned up 1 empty switch in `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2364$1302'.
Removing empty process `SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2364$1302'.
Removing empty process `SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2324$1296'.
Removing empty process `SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2327$1295'.
Removing empty process `SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2287$1293'.
Found and cleaned up 1 empty switch in `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2294$1292'.
Removing empty process `SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2294$1292'.
Removing empty process `SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2259$1286'.
Removing empty process `SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2261$1285'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1975$1211'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1974$1210'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1973$1209'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1972$1208'.
Found and cleaned up 1 empty switch in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1105'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1801$1059'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1800$1058'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1799$1057'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1798$1056'.
Found and cleaned up 1 empty switch in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$933'.
Removing empty process `RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1707$900'.
Found and cleaned up 1 empty switch in `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$863'.
Removing empty process `RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$863'.
Removing empty process `RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1602$852'.
Found and cleaned up 1 empty switch in `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$815'.
Removing empty process `RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$815'.
Removing empty process `RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1556$807'.
Found and cleaned up 1 empty switch in `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$788'.
Removing empty process `RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$788'.
Removing empty process `RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1497$780'.
Found and cleaned up 1 empty switch in `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$749'.
Removing empty process `RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$749'.
Removing empty process `FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$615'.
Found and cleaned up 1 empty switch in `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$612'.
Removing empty process `FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$612'.
Removing empty process `FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$611'.
Found and cleaned up 1 empty switch in `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$609'.
Removing empty process `FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$609'.
Removing empty process `FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$597'.
Found and cleaned up 1 empty switch in `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$594'.
Removing empty process `FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$594'.
Removing empty process `FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$593'.
Found and cleaned up 1 empty switch in `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$591'.
Removing empty process `FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$591'.
Removing empty process `FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$579'.
Found and cleaned up 2 empty switches in `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$576'.
Removing empty process `FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$576'.
Removing empty process `FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$575'.
Found and cleaned up 2 empty switches in `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$572'.
Removing empty process `FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$572'.
Removing empty process `FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$557'.
Found and cleaned up 2 empty switches in `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$554'.
Removing empty process `FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$554'.
Removing empty process `FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$553'.
Found and cleaned up 2 empty switches in `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$550'.
Removing empty process `FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$550'.
Found and cleaned up 2 empty switches in `\mod_counter.$proc$counter/mod_counter.sv:26$1'.
Removing empty process `mod_counter.$proc$counter/mod_counter.sv:26$1'.
Cleaned up 23 empty switches.

5.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.5. Executing TRIBUF pass.

5.6. Executing DEMINOUT pass (demote inout ports to input or output).

5.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

5.9. Executing CHECK pass (checking for obvious problems).
Checking module mod_counter...
Found and reported 0 problems.

5.10. Executing OPT pass (performing simple optimizations).

5.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mod_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

5.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mod_counter.
Performed a total of 0 changes.

5.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.10.6. Executing OPT_DFF pass (perform DFF optimizations).

5.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..

5.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.10.9. Finished OPT passes. (There is nothing left to do.)

5.11. Executing FSM pass (extract and optimize FSM).

5.11.1. Executing FSM_DETECT pass (finding FSMs in design).

5.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..

5.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

5.12. Executing OPT pass (performing simple optimizations).

5.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mod_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

5.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mod_counter.
Performed a total of 0 changes.

5.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$1619 ($dff) from module mod_counter (D = $procmux$1541_Y, Q = \count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$1620 ($sdff) from module mod_counter (D = $add$counter/mod_counter.sv:30$3_Y [3:0], Q = \count).

5.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

5.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.12.9. Rerunning OPT passes. (Maybe there is more to do..)

5.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mod_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

5.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mod_counter.
Performed a total of 0 changes.

5.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.12.13. Executing OPT_DFF pass (perform DFF optimizations).

5.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..

5.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.12.16. Finished OPT passes. (There is nothing left to do.)

5.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell mod_counter.$add$counter/mod_counter.sv:30$3 ($add).
Removed top 28 bits (of 32) from port Y of cell mod_counter.$add$counter/mod_counter.sv:30$3 ($add).
Removed top 31 bits (of 32) from mux cell mod_counter.$ternary$counter/mod_counter.sv:33$6 ($mux).
Removed top 28 bits (of 32) from wire mod_counter.$add$counter/mod_counter.sv:30$3_Y.

5.14. Executing PEEPOPT pass (run peephole optimizers).

5.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

5.16. Executing PMUX2SHIFTX pass.

5.17. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

5.18. Executing TECHMAP pass (map to technology primitives).

5.18.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/mul2dsp.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

5.18.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/xc7_dsp_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/xc7_dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL25X18'.
Successfully finished Verilog frontend.

5.18.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

5.19. Executing OPT_EXPR pass (perform const folding).

5.20. Executing WREDUCE pass (reducing word size of cells).

5.21. Executing XILINX_DSP pass (pack resources into DSPs).

5.22. Executing TECHMAP pass (map to technology primitives).

5.22.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/cmp2lut.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

5.22.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/cmp2lcu.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/cmp2lcu.v' to AST representation.
Generating RTLIL representation for module `\_80_lcu_cmp_'.
Generating RTLIL representation for module `\$__CMP2LCU'.
Successfully finished Verilog frontend.

5.22.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~7 debug messages>

5.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mod_counter:
  creating $macc model for $add$counter/mod_counter.sv:30$3 ($add).
  creating $alu model for $macc $add$counter/mod_counter.sv:30$3.
  creating $alu cell for $add$counter/mod_counter.sv:30$3: $auto$alumacc.cc:485:replace_alu$1625
  created 1 $alu and 0 $macc cells.

5.24. Executing SHARE pass (SAT-based resource sharing).

5.25. Executing OPT pass (performing simple optimizations).

5.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mod_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

5.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mod_counter.
Performed a total of 0 changes.

5.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.25.6. Executing OPT_DFF pass (perform DFF optimizations).

5.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..

5.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.25.9. Finished OPT passes. (There is nothing left to do.)

5.26. Executing MEMORY pass.

5.26.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.26.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.26.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

5.26.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

5.26.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

5.26.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..

5.26.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

5.26.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..

5.26.10. Executing MEMORY_COLLECT pass (generating $mem cells).

5.27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..

5.28. Executing MEMORY_LIBMAP pass (mapping memories to cells).

5.29. Executing TECHMAP pass (map to technology primitives).

5.29.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/lutrams_xc5v_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/lutrams_xc5v_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_SP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_DP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_QP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_OP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_SDP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_64X8SW_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_32X16DR8_'.
Successfully finished Verilog frontend.

5.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~9 debug messages>

5.30. Executing TECHMAP pass (map to technology primitives).

5.30.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/brams_xc6v_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/brams_xc6v_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_BLOCKRAM_TDP_'.
Generating RTLIL representation for module `\$__XILINX_BLOCKRAM_SDP_'.
Successfully finished Verilog frontend.

5.30.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

5.31. Executing OPT pass (performing simple optimizations).

5.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.
<suppressed ~1 debug messages>

5.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.31.3. Executing OPT_DFF pass (perform DFF optimizations).

5.31.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.31.5. Finished fast OPT passes.

5.32. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

5.33. Executing OPT pass (performing simple optimizations).

5.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mod_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mod_counter.
Performed a total of 0 changes.

5.33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
Removed a total of 0 cells.

5.33.6. Executing OPT_SHARE pass.

5.33.7. Executing OPT_DFF pass (perform DFF optimizations).

5.33.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..

5.33.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.33.10. Finished OPT passes. (There is nothing left to do.)

5.34. Executing XILINX_SRL pass (Xilinx shift register extraction).

5.35. Executing TECHMAP pass (map to technology primitives).

5.35.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/techmap.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.35.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/arith_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_xilinx_lcu'.
Generating RTLIL representation for module `\_80_xilinx_alu'.
Successfully finished Verilog frontend.

5.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$674141544fade965cf052b5e9d5b65813fc4e151\_80_xilinx_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~104 debug messages>

5.36. Executing OPT pass (performing simple optimizations).

5.36.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.
<suppressed ~12 debug messages>

5.36.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mod_counter'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

5.36.3. Executing OPT_DFF pass (perform DFF optimizations).

5.36.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mod_counter..
Removed 2 unused cells and 23 unused wires.
<suppressed ~3 debug messages>

5.36.5. Finished fast OPT passes.

5.37. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port mod_counter.clk using IBUF.
Mapping port mod_counter.count using OBUF.
Mapping port mod_counter.increment using IBUF.
Mapping port mod_counter.reset using IBUF.
Mapping port mod_counter.rolling_over using OBUF.

5.38. Executing TECHMAP pass (map to technology primitives).

5.38.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/techmap.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.38.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/cells_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$__SHREG_'.
Generating RTLIL representation for module `\$__XILINX_SHREG_'.
Generating RTLIL representation for module `\$__XILINX_MUXF78'.
Successfully finished Verilog frontend.

5.38.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~74 debug messages>

5.39. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

5.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module mod_counter.

5.41. Executing ABC pass (technology mapping using ABC).

5.41.1. Extracting gate netlist of module `\mod_counter' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 3 outputs.

5.41.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        3
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.
Removed 0 unused cells and 13 unused wires.

5.42. Executing TECHMAP pass (map to technology primitives).

5.42.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/ff_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NPP_'.
Generating RTLIL representation for module `\$_DLATCH_PPP_'.
Successfully finished Verilog frontend.

5.42.2. Continuing TECHMAP pass.
Using template $paramod\$_SDFFE_PP0P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_SDFFE_PP0P_.
No more expansions possible.
<suppressed ~33 debug messages>

5.43. Executing XILINX_SRL pass (Xilinx shift register extraction).

5.44. Executing TECHMAP pass (map to technology primitives).

5.44.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/lut_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.44.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/cells_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$__SHREG_'.
Generating RTLIL representation for module `\$__XILINX_SHREG_'.
Generating RTLIL representation for module `\$__XILINX_MUXF78'.
Successfully finished Verilog frontend.

5.44.3. Continuing TECHMAP pass.
Using template $paramod$9bdc414229f06e785dc8fd97a243faa9336e164a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$48d9efd06cac44a2ef6fb12687e56ff18b92d200\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~48 debug messages>

5.45. Executing XILINX_DFFOPT pass (optimize FF control signal usage).
Optimizing FFs in mod_counter.

5.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in mod_counter.

5.47. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting BUFG on mod_counter.$iopadmap$clk[0].
Removed 0 unused cells and 31 unused wires.

5.48. Executing HIERARCHY pass (managing design hierarchy).

5.48.1. Analyzing design hierarchy..
Top module:  \mod_counter

5.48.2. Analyzing design hierarchy..
Top module:  \mod_counter
Removed 0 unused modules.

5.49. Printing statistics.

=== mod_counter ===

   Number of wires:                 14
   Number of wire bits:             35
   Number of public wires:           5
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     BUFG                            1
     CARRY4                          1
     FDRE                            4
     IBUF                            3
     INV                             1
     LUT5                            1
     LUT6                            1
     OBUF                            5

   Estimated number of LCs:          2

5.50. Executing CHECK pass (checking for obvious problems).
Checking module mod_counter...
Found and reported 0 problems.

6. Executing BLIF backend.


    apply_tmr [options]

Convenience command to run both replicate and insert_voters
    -suffix <string>
        Specify the suffix to be appended to each replicated cell and wire name.
        The default suffix is "TMR"

    -amount <int>
        Total number of copies. The default is 3

    -ports
        When this option is passed, all top level ports will be replicated.

    -voter_type <string>
        Specify the name of the primitive in the design to be used as a voter
        The default is Xilinx's LUT3

    -voter_name <string>
        Specify the name to be appended to each voter
        The default is "VOTER"

    -reduction
        Insert reduction voters

    -ff
        Insert voters after every flip flop

    -verbose
        Print all log messages during voter insertion


    replicate [options]

This command replicates the design. It operates on all modules
in the design except for blackboxes.

    -suffix <string>
        Specify the suffix to be appended to each replicated cell and wire name.
        The default suffix is "TMR"

    -amount <int>
        Total number of copies. The default is 3

    -ports
        When this option is passed, all top level ports will be replicated.

    -verbose
        Print all log messages during replication


    insert_voters [options]

This command inserts voters into a replicated the design.
It operates on all modules in the design except for blackboxes.

    -suffix <string>
        Specify the suffix to be appended to each inserted voter.
        The default suffix is "TMR"

    -amount <int>
        Total number of copies in the replicated design.
        The default is 3

    -voter_type <string>
        Specify the name of the primitive in the design to be used as a voter
        The default is Xilinx's LUT3

    -voter_name <string>
        Specify the name to be appended to each voter
        The default is "VOTER"

    -reduction
        Insert reduction voters

    -ff
        Insert voters after every flip flop

    -verbose
        Print all log messages during voter insertion

7. Executing REPLICATE Pass
