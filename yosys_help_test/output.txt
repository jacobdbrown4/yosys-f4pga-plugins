
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.17+41 (git sha1 c525b5f91, clang 10.0.0-4ubuntu1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /home/jacobb00/yosys_plugins/yosys-f4pga-plugins/yosys_help_test/toggle.sv
Parsing SystemVerilog input from `/home/jacobb00/yosys_plugins/yosys-f4pga-plugins/yosys_help_test/toggle.sv' to AST representation.
Storing AST representation for module `$abstract\toggle'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

3. Executing AST frontend in derive mode using pre-parsed AST for module `\toggle'.
Generating RTLIL representation for module `\toggle'.

3.1. Analyzing design hierarchy..
Top module:  \toggle

3.2. Analyzing design hierarchy..
Top module:  \toggle
Removing unused module `$abstract\toggle'.
Removed 1 unused modules.

4. Executing Verilog-2005 frontend: uart/debounce.sv
Parsing SystemVerilog input from `uart/debounce.sv' to AST representation.
Storing AST representation for module `$abstract\debounce'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: uart/mod_counter.sv
Parsing SystemVerilog input from `uart/mod_counter.sv' to AST representation.
Storing AST representation for module `$abstract\mod_counter'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: uart/tx.sv
Parsing SystemVerilog input from `uart/tx.sv' to AST representation.
Storing AST representation for module `$abstract\tx'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: uart/tx_top.sv
Parsing SystemVerilog input from `uart/tx_top.sv' to AST representation.
Storing AST representation for module `$abstract\tx_top'.
Successfully finished Verilog frontend.

8. Executing HIERARCHY pass (managing design hierarchy).

9. Executing AST frontend in derive mode using pre-parsed AST for module `\tx_top'.
Generating RTLIL representation for module `\tx_top'.

9.1. Analyzing design hierarchy..
Top module:  \tx_top

9.2. Executing AST frontend in derive mode using pre-parsed AST for module `\tx'.
Generating RTLIL representation for module `\tx'.

9.3. Executing AST frontend in derive mode using pre-parsed AST for module `\debounce'.
Generating RTLIL representation for module `\debounce'.

9.4. Analyzing design hierarchy..
Top module:  \tx_top
Used module:     \tx
Used module:     \debounce
Parameter 1 (\MOD_VALUE) = 500001
Parameter 2 (\COUNTER_WIDTH) = 19

9.5. Executing AST frontend in derive mode using pre-parsed AST for module `\mod_counter'.
Parameter 1 (\MOD_VALUE) = 500001
Parameter 2 (\COUNTER_WIDTH) = 19
Generating RTLIL representation for module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.

9.6. Analyzing design hierarchy..
Top module:  \tx_top
Used module:     \tx
Used module:     \debounce
Used module:         $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter

9.7. Analyzing design hierarchy..
Top module:  \tx_top
Used module:     \tx
Used module:     \debounce
Used module:         $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter
Removing unused module `$abstract\tx_top'.
Removing unused module `$abstract\tx'.
Removing unused module `$abstract\mod_counter'.
Removing unused module `$abstract\debounce'.
Removing unused module `\toggle'.
Removed 5 unused modules.

10. Executing SYNTH_XILINX pass.

10.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\IBUFG'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\OBUFT'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFGCTRL'.
Generating RTLIL representation for module `\BUFHCE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT6_2'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\$__ABC9_LUT8'.
Generating RTLIL representation for module `\MUXCY'.
Generating RTLIL representation for module `\MUXF5'.
Generating RTLIL representation for module `\MUXF6'.
Generating RTLIL representation for module `\MUXF7'.
Generating RTLIL representation for module `\MUXF8'.
Generating RTLIL representation for module `\MUXF9'.
Generating RTLIL representation for module `\XORCY'.
Generating RTLIL representation for module `\CARRY4'.
Generating RTLIL representation for module `\CARRY8'.
Generating RTLIL representation for module `\ORCY'.
Generating RTLIL representation for module `\MULT_AND'.
Generating RTLIL representation for module `\FDRE'.
Generating RTLIL representation for module `\FDRE_1'.
Generating RTLIL representation for module `\FDSE'.
Generating RTLIL representation for module `\FDSE_1'.
Generating RTLIL representation for module `\FDRSE'.
Generating RTLIL representation for module `\FDRSE_1'.
Generating RTLIL representation for module `\FDCE'.
Generating RTLIL representation for module `\FDCE_1'.
Generating RTLIL representation for module `\FDPE'.
Generating RTLIL representation for module `\FDPE_1'.
Generating RTLIL representation for module `\FDCPE'.
Generating RTLIL representation for module `\FDCPE_1'.
Generating RTLIL representation for module `\LDCE'.
Generating RTLIL representation for module `\LDPE'.
Generating RTLIL representation for module `\LDCPE'.
Generating RTLIL representation for module `\AND2B1L'.
Generating RTLIL representation for module `\OR2L'.
Generating RTLIL representation for module `\RAM16X1S'.
Generating RTLIL representation for module `\RAM16X1S_1'.
Generating RTLIL representation for module `\RAM32X1S'.
Generating RTLIL representation for module `\RAM32X1S_1'.
Generating RTLIL representation for module `\RAM64X1S'.
Generating RTLIL representation for module `\RAM64X1S_1'.
Generating RTLIL representation for module `\RAM128X1S'.
Generating RTLIL representation for module `\RAM128X1S_1'.
Generating RTLIL representation for module `\RAM256X1S'.
Generating RTLIL representation for module `\RAM512X1S'.
Generating RTLIL representation for module `\RAM16X2S'.
Generating RTLIL representation for module `\RAM32X2S'.
Generating RTLIL representation for module `\RAM64X2S'.
Generating RTLIL representation for module `\RAM16X4S'.
Generating RTLIL representation for module `\RAM32X4S'.
Generating RTLIL representation for module `\RAM16X8S'.
Generating RTLIL representation for module `\RAM32X8S'.
Generating RTLIL representation for module `\RAM16X1D'.
Generating RTLIL representation for module `\RAM16X1D_1'.
Generating RTLIL representation for module `\RAM32X1D'.
Generating RTLIL representation for module `\RAM32X1D_1'.
Generating RTLIL representation for module `\RAM64X1D'.
Generating RTLIL representation for module `\RAM64X1D_1'.
Generating RTLIL representation for module `\RAM128X1D'.
Generating RTLIL representation for module `\RAM256X1D'.
Generating RTLIL representation for module `\RAM32M'.
Generating RTLIL representation for module `\RAM32M16'.
Generating RTLIL representation for module `\RAM64M'.
Generating RTLIL representation for module `\RAM64M8'.
Generating RTLIL representation for module `\RAM32X16DR8'.
Generating RTLIL representation for module `\RAM64X8SW'.
Generating RTLIL representation for module `\ROM16X1'.
Generating RTLIL representation for module `\ROM32X1'.
Generating RTLIL representation for module `\ROM64X1'.
Generating RTLIL representation for module `\ROM128X1'.
Generating RTLIL representation for module `\ROM256X1'.
Generating RTLIL representation for module `\SRL16'.
Generating RTLIL representation for module `\SRL16E'.
Generating RTLIL representation for module `\SRLC16'.
Generating RTLIL representation for module `\SRLC16E'.
Generating RTLIL representation for module `\SRLC32E'.
Generating RTLIL representation for module `\CFGLUT5'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT18X18S'.
Generating RTLIL representation for module `\MULT18X18SIO'.
Generating RTLIL representation for module `\DSP48A'.
Generating RTLIL representation for module `\DSP48A1'.
Generating RTLIL representation for module `\DSP48'.
Generating RTLIL representation for module `\DSP48E1'.
Generating RTLIL representation for module `\RAMB18E1'.
Generating RTLIL representation for module `\RAMB36E1'.
Successfully finished Verilog frontend.

10.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/cells_xtra.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\RAMB4_S1'.
Generating RTLIL representation for module `\RAMB4_S2'.
Generating RTLIL representation for module `\RAMB4_S4'.
Generating RTLIL representation for module `\RAMB4_S8'.
Generating RTLIL representation for module `\RAMB4_S16'.
Generating RTLIL representation for module `\RAMB4_S1_S1'.
Generating RTLIL representation for module `\RAMB4_S1_S2'.
Generating RTLIL representation for module `\RAMB4_S1_S4'.
Generating RTLIL representation for module `\RAMB4_S1_S8'.
Generating RTLIL representation for module `\RAMB4_S1_S16'.
Generating RTLIL representation for module `\RAMB4_S2_S2'.
Generating RTLIL representation for module `\RAMB4_S2_S4'.
Generating RTLIL representation for module `\RAMB4_S2_S8'.
Generating RTLIL representation for module `\RAMB4_S2_S16'.
Generating RTLIL representation for module `\RAMB4_S4_S4'.
Generating RTLIL representation for module `\RAMB4_S4_S8'.
Generating RTLIL representation for module `\RAMB4_S4_S16'.
Generating RTLIL representation for module `\RAMB4_S8_S8'.
Generating RTLIL representation for module `\RAMB4_S8_S16'.
Generating RTLIL representation for module `\RAMB4_S16_S16'.
Generating RTLIL representation for module `\RAMB16_S1'.
Generating RTLIL representation for module `\RAMB16_S2'.
Generating RTLIL representation for module `\RAMB16_S4'.
Generating RTLIL representation for module `\RAMB16_S9'.
Generating RTLIL representation for module `\RAMB16_S18'.
Generating RTLIL representation for module `\RAMB16_S36'.
Generating RTLIL representation for module `\RAMB16_S1_S1'.
Generating RTLIL representation for module `\RAMB16_S1_S2'.
Generating RTLIL representation for module `\RAMB16_S1_S4'.
Generating RTLIL representation for module `\RAMB16_S1_S9'.
Generating RTLIL representation for module `\RAMB16_S1_S18'.
Generating RTLIL representation for module `\RAMB16_S1_S36'.
Generating RTLIL representation for module `\RAMB16_S2_S2'.
Generating RTLIL representation for module `\RAMB16_S2_S4'.
Generating RTLIL representation for module `\RAMB16_S2_S9'.
Generating RTLIL representation for module `\RAMB16_S2_S18'.
Generating RTLIL representation for module `\RAMB16_S2_S36'.
Generating RTLIL representation for module `\RAMB16_S4_S4'.
Generating RTLIL representation for module `\RAMB16_S4_S9'.
Generating RTLIL representation for module `\RAMB16_S4_S18'.
Generating RTLIL representation for module `\RAMB16_S4_S36'.
Generating RTLIL representation for module `\RAMB16_S9_S9'.
Generating RTLIL representation for module `\RAMB16_S9_S18'.
Generating RTLIL representation for module `\RAMB16_S9_S36'.
Generating RTLIL representation for module `\RAMB16_S18_S18'.
Generating RTLIL representation for module `\RAMB16_S18_S36'.
Generating RTLIL representation for module `\RAMB16_S36_S36'.
Generating RTLIL representation for module `\RAMB16BWE_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36'.
Generating RTLIL representation for module `\RAMB16BWE_S18_S9'.
Generating RTLIL representation for module `\RAMB16BWE_S18_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S9'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S36'.
Generating RTLIL representation for module `\RAMB16BWER'.
Generating RTLIL representation for module `\RAMB8BWER'.
Generating RTLIL representation for module `\FIFO16'.
Generating RTLIL representation for module `\RAMB16'.
Generating RTLIL representation for module `\RAMB32_S64_ECC'.
Generating RTLIL representation for module `\FIFO18'.
Generating RTLIL representation for module `\FIFO18_36'.
Generating RTLIL representation for module `\FIFO36'.
Generating RTLIL representation for module `\FIFO36_72'.
Generating RTLIL representation for module `\RAMB18'.
Generating RTLIL representation for module `\RAMB36'.
Generating RTLIL representation for module `\RAMB18SDP'.
Generating RTLIL representation for module `\RAMB36SDP'.
Generating RTLIL representation for module `\FIFO18E1'.
Generating RTLIL representation for module `\FIFO36E1'.
Generating RTLIL representation for module `\FIFO18E2'.
Generating RTLIL representation for module `\FIFO36E2'.
Generating RTLIL representation for module `\RAMB18E2'.
Generating RTLIL representation for module `\RAMB36E2'.
Generating RTLIL representation for module `\URAM288'.
Generating RTLIL representation for module `\URAM288_BASE'.
Generating RTLIL representation for module `\DSP48E'.
Generating RTLIL representation for module `\DSP48E2'.
Generating RTLIL representation for module `\FDDRCPE'.
Generating RTLIL representation for module `\FDDRRSE'.
Generating RTLIL representation for module `\IFDDRCPE'.
Generating RTLIL representation for module `\IFDDRRSE'.
Generating RTLIL representation for module `\OFDDRCPE'.
Generating RTLIL representation for module `\OFDDRRSE'.
Generating RTLIL representation for module `\OFDDRTCPE'.
Generating RTLIL representation for module `\OFDDRTRSE'.
Generating RTLIL representation for module `\IDDR2'.
Generating RTLIL representation for module `\ODDR2'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDR_2CLK'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\IDELAYCTRL'.
Generating RTLIL representation for module `\IDELAY'.
Generating RTLIL representation for module `\ISERDES'.
Generating RTLIL representation for module `\OSERDES'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\ISERDES_NODELAY'.
Generating RTLIL representation for module `\IODELAYE1'.
Generating RTLIL representation for module `\ISERDESE1'.
Generating RTLIL representation for module `\OSERDESE1'.
Generating RTLIL representation for module `\IDELAYE2'.
Generating RTLIL representation for module `\ODELAYE2'.
Generating RTLIL representation for module `\ISERDESE2'.
Generating RTLIL representation for module `\OSERDESE2'.
Generating RTLIL representation for module `\PHASER_IN'.
Generating RTLIL representation for module `\PHASER_IN_PHY'.
Generating RTLIL representation for module `\PHASER_OUT'.
Generating RTLIL representation for module `\PHASER_OUT_PHY'.
Generating RTLIL representation for module `\PHASER_REF'.
Generating RTLIL representation for module `\PHY_CONTROL'.
Generating RTLIL representation for module `\IDDRE1'.
Generating RTLIL representation for module `\ODDRE1'.
Generating RTLIL representation for module `\IDELAYE3'.
Generating RTLIL representation for module `\ODELAYE3'.
Generating RTLIL representation for module `\ISERDESE3'.
Generating RTLIL representation for module `\OSERDESE3'.
Generating RTLIL representation for module `\BITSLICE_CONTROL'.
Generating RTLIL representation for module `\RIU_OR'.
Generating RTLIL representation for module `\RX_BITSLICE'.
Generating RTLIL representation for module `\RXTX_BITSLICE'.
Generating RTLIL representation for module `\TX_BITSLICE'.
Generating RTLIL representation for module `\TX_BITSLICE_TRI'.
Generating RTLIL representation for module `\IODELAY2'.
Generating RTLIL representation for module `\IODRP2'.
Generating RTLIL representation for module `\IODRP2_MCB'.
Generating RTLIL representation for module `\ISERDES2'.
Generating RTLIL representation for module `\OSERDES2'.
Generating RTLIL representation for module `\IBUF_DLY_ADJ'.
Generating RTLIL representation for module `\IBUF_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUF_ANALOG'.
Generating RTLIL representation for module `\IBUFE3'.
Generating RTLIL representation for module `\IBUFDS'.
Generating RTLIL representation for module `\IBUFDS_DLY_ADJ'.
Generating RTLIL representation for module `\IBUFDS_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDSE3'.
Generating RTLIL representation for module `\IBUFDS_DPHY'.
Generating RTLIL representation for module `\IBUFGDS'.
Generating RTLIL representation for module `\IBUFGDS_DIFF_OUT'.
Generating RTLIL representation for module `\IOBUF_DCIEN'.
Generating RTLIL representation for module `\IOBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFE3'.
Generating RTLIL representation for module `\IOBUFDS'.
Generating RTLIL representation for module `\IOBUFDS_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFDSE3'.
Generating RTLIL representation for module `\OBUFDS'.
Generating RTLIL representation for module `\OBUFDS_DPHY'.
Generating RTLIL representation for module `\OBUFTDS'.
Generating RTLIL representation for module `\KEEPER'.
Generating RTLIL representation for module `\PULLDOWN'.
Generating RTLIL representation for module `\PULLUP'.
Generating RTLIL representation for module `\DCIRESET'.
Generating RTLIL representation for module `\HPIO_VREF'.
Generating RTLIL representation for module `\BUFGCE'.
Generating RTLIL representation for module `\BUFGCE_1'.
Generating RTLIL representation for module `\BUFGMUX'.
Generating RTLIL representation for module `\BUFGMUX_1'.
Generating RTLIL representation for module `\BUFGMUX_CTRL'.
Generating RTLIL representation for module `\BUFGMUX_VIRTEX4'.
Generating RTLIL representation for module `\BUFG_GT'.
Generating RTLIL representation for module `\BUFG_GT_SYNC'.
Generating RTLIL representation for module `\BUFG_PS'.
Generating RTLIL representation for module `\BUFGCE_DIV'.
Generating RTLIL representation for module `\BUFH'.
Generating RTLIL representation for module `\BUFIO2'.
Generating RTLIL representation for module `\BUFIO2_2CLK'.
Generating RTLIL representation for module `\BUFIO2FB'.
Generating RTLIL representation for module `\BUFPLL'.
Generating RTLIL representation for module `\BUFPLL_MCB'.
Generating RTLIL representation for module `\BUFIO'.
Generating RTLIL representation for module `\BUFIODQS'.
Generating RTLIL representation for module `\BUFR'.
Generating RTLIL representation for module `\BUFMR'.
Generating RTLIL representation for module `\BUFMRCE'.
Generating RTLIL representation for module `\DCM'.
Generating RTLIL representation for module `\DCM_SP'.
Generating RTLIL representation for module `\DCM_CLKGEN'.
Generating RTLIL representation for module `\DCM_ADV'.
Generating RTLIL representation for module `\DCM_BASE'.
Generating RTLIL representation for module `\DCM_PS'.
Generating RTLIL representation for module `\PMCD'.
Generating RTLIL representation for module `\PLL_ADV'.
Generating RTLIL representation for module `\PLL_BASE'.
Generating RTLIL representation for module `\MMCM_ADV'.
Generating RTLIL representation for module `\MMCM_BASE'.
Generating RTLIL representation for module `\MMCME2_ADV'.
Generating RTLIL representation for module `\MMCME2_BASE'.
Generating RTLIL representation for module `\PLLE2_ADV'.
Generating RTLIL representation for module `\PLLE2_BASE'.
Generating RTLIL representation for module `\MMCME3_ADV'.
Generating RTLIL representation for module `\MMCME3_BASE'.
Generating RTLIL representation for module `\PLLE3_ADV'.
Generating RTLIL representation for module `\PLLE3_BASE'.
Generating RTLIL representation for module `\MMCME4_ADV'.
Generating RTLIL representation for module `\MMCME4_BASE'.
Generating RTLIL representation for module `\PLLE4_ADV'.
Generating RTLIL representation for module `\PLLE4_BASE'.
Generating RTLIL representation for module `\BUFT'.
Generating RTLIL representation for module `\IN_FIFO'.
Generating RTLIL representation for module `\OUT_FIFO'.
Generating RTLIL representation for module `\HARD_SYNC'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3E'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3A'.
Generating RTLIL representation for module `\STARTUP_SPARTAN6'.
Generating RTLIL representation for module `\STARTUP_VIRTEX4'.
Generating RTLIL representation for module `\STARTUP_VIRTEX5'.
Generating RTLIL representation for module `\STARTUP_VIRTEX6'.
Generating RTLIL representation for module `\STARTUPE2'.
Generating RTLIL representation for module `\STARTUPE3'.
Generating RTLIL representation for module `\CAPTURE_SPARTAN3'.
Generating RTLIL representation for module `\CAPTURE_SPARTAN3A'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX4'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX5'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX6'.
Generating RTLIL representation for module `\CAPTUREE2'.
Generating RTLIL representation for module `\ICAP_SPARTAN3A'.
Generating RTLIL representation for module `\ICAP_SPARTAN6'.
Generating RTLIL representation for module `\ICAP_VIRTEX4'.
Generating RTLIL representation for module `\ICAP_VIRTEX5'.
Generating RTLIL representation for module `\ICAP_VIRTEX6'.
Generating RTLIL representation for module `\ICAPE2'.
Generating RTLIL representation for module `\ICAPE3'.
Generating RTLIL representation for module `\BSCAN_SPARTAN3'.
Generating RTLIL representation for module `\BSCAN_SPARTAN3A'.
Generating RTLIL representation for module `\BSCAN_SPARTAN6'.
Generating RTLIL representation for module `\BSCAN_VIRTEX4'.
Generating RTLIL representation for module `\BSCAN_VIRTEX5'.
Generating RTLIL representation for module `\BSCAN_VIRTEX6'.
Generating RTLIL representation for module `\BSCANE2'.
Generating RTLIL representation for module `\DNA_PORT'.
Generating RTLIL representation for module `\DNA_PORTE2'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX4'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX5'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX6'.
Generating RTLIL representation for module `\FRAME_ECCE2'.
Generating RTLIL representation for module `\FRAME_ECCE3'.
Generating RTLIL representation for module `\FRAME_ECCE4'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX4'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX5'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX6'.
Generating RTLIL representation for module `\USR_ACCESSE2'.
Generating RTLIL representation for module `\POST_CRC_INTERNAL'.
Generating RTLIL representation for module `\SUSPEND_SYNC'.
Generating RTLIL representation for module `\KEY_CLEAR'.
Generating RTLIL representation for module `\MASTER_JTAG'.
Generating RTLIL representation for module `\SPI_ACCESS'.
Generating RTLIL representation for module `\EFUSE_USR'.
Generating RTLIL representation for module `\SYSMON'.
Generating RTLIL representation for module `\XADC'.
Generating RTLIL representation for module `\SYSMONE1'.
Generating RTLIL representation for module `\SYSMONE4'.
Generating RTLIL representation for module `\GTPA1_DUAL'.
Generating RTLIL representation for module `\GT11_CUSTOM'.
Generating RTLIL representation for module `\GT11_DUAL'.
Generating RTLIL representation for module `\GT11CLK'.
Generating RTLIL representation for module `\GT11CLK_MGT'.
Generating RTLIL representation for module `\GTP_DUAL'.
Generating RTLIL representation for module `\GTX_DUAL'.
Generating RTLIL representation for module `\CRC32'.
Generating RTLIL representation for module `\CRC64'.
Generating RTLIL representation for module `\GTHE1_QUAD'.
Generating RTLIL representation for module `\GTXE1'.
Generating RTLIL representation for module `\IBUFDS_GTXE1'.
Generating RTLIL representation for module `\IBUFDS_GTHE1'.
Generating RTLIL representation for module `\GTHE2_CHANNEL'.
Generating RTLIL representation for module `\GTHE2_COMMON'.
Generating RTLIL representation for module `\GTPE2_CHANNEL'.
Generating RTLIL representation for module `\GTPE2_COMMON'.
Generating RTLIL representation for module `\GTXE2_CHANNEL'.
Generating RTLIL representation for module `\GTXE2_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE2'.
Generating RTLIL representation for module `\GTHE3_CHANNEL'.
Generating RTLIL representation for module `\GTHE3_COMMON'.
Generating RTLIL representation for module `\GTYE3_CHANNEL'.
Generating RTLIL representation for module `\GTYE3_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE3'.
Generating RTLIL representation for module `\OBUFDS_GTE3'.
Generating RTLIL representation for module `\OBUFDS_GTE3_ADV'.
Generating RTLIL representation for module `\GTHE4_CHANNEL'.
Generating RTLIL representation for module `\GTHE4_COMMON'.
Generating RTLIL representation for module `\GTYE4_CHANNEL'.
Generating RTLIL representation for module `\GTYE4_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE4'.
Generating RTLIL representation for module `\OBUFDS_GTE4'.
Generating RTLIL representation for module `\OBUFDS_GTE4_ADV'.
Generating RTLIL representation for module `\GTM_DUAL'.
Generating RTLIL representation for module `\IBUFDS_GTM'.
Generating RTLIL representation for module `\OBUFDS_GTM'.
Generating RTLIL representation for module `\OBUFDS_GTM_ADV'.
Generating RTLIL representation for module `\HSDAC'.
Generating RTLIL representation for module `\HSADC'.
Generating RTLIL representation for module `\RFDAC'.
Generating RTLIL representation for module `\RFADC'.
Generating RTLIL representation for module `\PCIE_A1'.
Generating RTLIL representation for module `\PCIE_EP'.
Generating RTLIL representation for module `\PCIE_2_0'.
Generating RTLIL representation for module `\PCIE_2_1'.
Generating RTLIL representation for module `\PCIE_3_0'.
Generating RTLIL representation for module `\PCIE_3_1'.
Generating RTLIL representation for module `\PCIE40E4'.
Generating RTLIL representation for module `\PCIE4CE4'.
Generating RTLIL representation for module `\EMAC'.
Generating RTLIL representation for module `\TEMAC'.
Generating RTLIL representation for module `\TEMAC_SINGLE'.
Generating RTLIL representation for module `\CMAC'.
Generating RTLIL representation for module `\CMACE4'.
Generating RTLIL representation for module `\MCB'.
Generating RTLIL representation for module `\HBM_REF_CLK'.
Generating RTLIL representation for module `\HBM_SNGLBLI_INTF_APB'.
Generating RTLIL representation for module `\HBM_SNGLBLI_INTF_AXI'.
Generating RTLIL representation for module `\HBM_ONE_STACK_INTF'.
Generating RTLIL representation for module `\HBM_TWO_STACK_INTF'.
Generating RTLIL representation for module `\PPC405_ADV'.
Generating RTLIL representation for module `\PPC440'.
Generating RTLIL representation for module `\PS7'.
Generating RTLIL representation for module `\PS8'.
Generating RTLIL representation for module `\ILKN'.
Generating RTLIL representation for module `\ILKNE4'.
Generating RTLIL representation for module `\VCU'.
Generating RTLIL representation for module `\FE'.
Successfully finished Verilog frontend.

10.3. Executing HIERARCHY pass (managing design hierarchy).

10.3.1. Analyzing design hierarchy..
Top module:  \tx_top
Used module:     \tx
Used module:     \debounce
Used module:         $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter

10.3.2. Analyzing design hierarchy..
Top module:  \tx_top
Used module:     \tx
Used module:     \debounce
Used module:         $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter
Removed 0 unused modules.

10.4. Executing PROC pass (convert processes to netlists).

10.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138 in module RAM64M.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966 in module RAM32M.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$896 in module RAM128X1D.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$848 in module RAM64X1D.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$821 in module RAM32X1D_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$782 in module RAM32X1D.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$645 in module FDPE_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$642 in module FDPE.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$627 in module FDCE_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$624 in module FDCE.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$609 in module FDSE_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$605 in module FDSE.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$587 in module FDRE_1.
Marked 1 switch rules as full_case in process $proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$583 in module FDRE.
Removed 1 dead cases from process $proc$uart/debounce.sv:0$24 in module debounce.
Marked 10 switch rules as full_case in process $proc$uart/debounce.sv:0$24 in module debounce.
Marked 9 switch rules as full_case in process $proc$uart/tx.sv:0$18 in module tx.
Marked 3 switch rules as full_case in process $proc$uart/tx.sv:48$15 in module tx.
Marked 1 switch rules as full_case in process $proc$uart/tx.sv:40$12 in module tx.
Marked 1 switch rules as full_case in process $proc$uart/tx.sv:30$7 in module tx.
Marked 1 switch rules as full_case in process $proc$uart/mod_counter.sv:26$34 in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Removed a total of 1 dead cases.

10.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 102 assignments to connections.

10.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2400$1343'.
  Set init value: \r = 0
Found init rule in `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2356$1336'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2324$1329'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2287$1326'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2259$1319'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1975$1244'.
  Set init value: \mem_d = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1974$1243'.
  Set init value: \mem_c = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1973$1242'.
  Set init value: \mem_b = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1972$1241'.
  Set init value: \mem_a = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1801$1092'.
  Set init value: \mem_d = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1800$1091'.
  Set init value: \mem_c = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1799$1090'.
  Set init value: \mem_b = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1798$1089'.
  Set init value: \mem_a = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1707$933'.
  Set init value: \mem = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1602$885'.
  Set init value: \mem = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1556$840'.
  Set init value: \mem = 0
Found init rule in `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1497$813'.
  Set init value: \mem = 0
Found init rule in `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$648'.
  Set init value: \Q = 1'1
Found init rule in `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$644'.
  Set init value: \Q = 1'1
Found init rule in `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$630'.
  Set init value: \Q = 1'0
Found init rule in `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$626'.
  Set init value: \Q = 1'0
Found init rule in `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$612'.
  Set init value: \Q = 1'1
Found init rule in `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$608'.
  Set init value: \Q = 1'1
Found init rule in `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$590'.
  Set init value: \Q = 1'0
Found init rule in `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$586'.
  Set init value: \Q = 1'0

10.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \PRE in `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$645'.
Found async reset \PRE in `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$642'.
Found async reset \CLR in `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$627'.
Found async reset \CLR in `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$624'.

10.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~48 debug messages>

10.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2400$1343'.
Creating decoders for process `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2408$1342'.
     1/1: $0\r[31:0]
Creating decoders for process `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2356$1336'.
Creating decoders for process `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2364$1335'.
     1/1: $0\r[15:0]
Creating decoders for process `\SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2324$1329'.
Creating decoders for process `\SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2327$1328'.
Creating decoders for process `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2287$1326'.
Creating decoders for process `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2294$1325'.
     1/1: $0\r[15:0]
Creating decoders for process `\SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2259$1319'.
Creating decoders for process `\SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2261$1318'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1975$1244'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1974$1243'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1973$1242'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1972$1241'.
Creating decoders for process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
     1/16: $1$lookahead\mem_d$1137[63:0]$1170
     2/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1127[63:0]$1165
     3/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1126[63:0]$1164
     4/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1128[5:0]$1166
     5/16: $1$lookahead\mem_c$1136[63:0]$1169
     6/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1124[63:0]$1162
     7/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1123[63:0]$1161
     8/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1125[5:0]$1163
     9/16: $1$lookahead\mem_b$1135[63:0]$1168
    10/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1121[63:0]$1159
    11/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1120[63:0]$1158
    12/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1122[5:0]$1160
    13/16: $1$lookahead\mem_a$1134[63:0]$1167
    14/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1118[63:0]$1156
    15/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1117[63:0]$1155
    16/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1119[5:0]$1157
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1801$1092'.
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1800$1091'.
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1799$1090'.
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1798$1089'.
Creating decoders for process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
     1/16: $1$lookahead\mem_d$965[63:0]$998
     2/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$947[63:0]$993
     3/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$946[63:0]$992
     4/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$948[31:0]$994
     5/16: $1$lookahead\mem_c$964[63:0]$997
     6/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$944[63:0]$990
     7/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$943[63:0]$989
     8/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$945[31:0]$991
     9/16: $1$lookahead\mem_b$963[63:0]$996
    10/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$941[63:0]$987
    11/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$940[63:0]$986
    12/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$942[31:0]$988
    13/16: $1$lookahead\mem_a$962[63:0]$995
    14/16: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$938[63:0]$984
    15/16: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$937[63:0]$983
    16/16: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$939[31:0]$985
Creating decoders for process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1707$933'.
Creating decoders for process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$896'.
     1/4: $1$lookahead\mem$895[127:0]$904
     2/4: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$890[127:0]$902
     3/4: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$889[127:0]$901
     4/4: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$891[6:0]$903
Creating decoders for process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1602$885'.
Creating decoders for process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$848'.
     1/4: $1$lookahead\mem$847[63:0]$856
     2/4: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$842[63:0]$854
     3/4: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$841[63:0]$853
     4/4: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$843[5:0]$855
Creating decoders for process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1556$840'.
Creating decoders for process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$821'.
     1/4: $1$lookahead\mem$820[31:0]$829
     2/4: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$815[31:0]$827
     3/4: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$814[31:0]$826
     4/4: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$816[4:0]$828
Creating decoders for process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1497$813'.
Creating decoders for process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$782'.
     1/4: $1$lookahead\mem$781[31:0]$790
     2/4: $1$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$776[31:0]$788
     3/4: $1$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$775[31:0]$787
     4/4: $1$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$777[4:0]$789
Creating decoders for process `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$648'.
Creating decoders for process `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$645'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$644'.
Creating decoders for process `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$642'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$630'.
Creating decoders for process `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$627'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$626'.
Creating decoders for process `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$624'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$612'.
Creating decoders for process `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$609'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$608'.
Creating decoders for process `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$605'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$590'.
Creating decoders for process `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$587'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$586'.
Creating decoders for process `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$583'.
     1/1: $0\Q[0:0]
Creating decoders for process `\debounce.$proc$uart/debounce.sv:90$33'.
Creating decoders for process `\debounce.$proc$uart/debounce.sv:0$24'.
     1/14: $10\ns[1:0]
     2/14: $9\ns[1:0]
     3/14: $8\ns[1:0]
     4/14: $7\ns[1:0]
     5/14: $6\ns[1:0]
     6/14: $5\ns[1:0]
     7/14: $4\ns[1:0]
     8/14: $3\ns[1:0]
     9/14: $2\ns[1:0]
    10/14: $2\debounced[0:0]
    11/14: $2\clrTimer[0:0]
    12/14: $1\ns[1:0]
    13/14: $1\clrTimer[0:0]
    14/14: $1\debounced[0:0]
Creating decoders for process `\tx.$proc$uart/tx.sv:129$23'.
Creating decoders for process `\tx.$proc$uart/tx.sv:0$18'.
     1/26: $9\ns[2:0]
     2/26: $8\ns[2:0]
     3/26: $7\ns[2:0]
     4/26: $4\incBit[0:0]
     5/26: $6\ns[2:0]
     6/26: $5\ns[2:0]
     7/26: $3\incBit[0:0]
     8/26: $3\clrBit[0:0]
     9/26: $4\ns[2:0]
    10/26: $3\ns[2:0]
    11/26: $2\ns[2:0]
    12/26: $2\clrTimer[0:0]
    13/26: $2\clrBit[0:0]
    14/26: $2\parityBit[0:0]
    15/26: $2\dataBit[0:0]
    16/26: $2\startBit[0:0]
    17/26: $2\incBit[0:0]
    18/26: $2\Sent[0:0]
    19/26: $1\ns[2:0]
    20/26: $1\clrBit[0:0]
    21/26: $1\clrTimer[0:0]
    22/26: $1\parityBit[0:0]
    23/26: $1\dataBit[0:0]
    24/26: $1\startBit[0:0]
    25/26: $1\incBit[0:0]
    26/26: $1\Sent[0:0]
Creating decoders for process `\tx.$proc$uart/tx.sv:48$15'.
     1/1: $0\Sout[0:0]
Creating decoders for process `\tx.$proc$uart/tx.sv:40$12'.
     1/1: $0\bitCount[3:0]
Creating decoders for process `\tx.$proc$uart/tx.sv:30$7'.
     1/1: $0\count[13:0]
Creating decoders for process `\tx_top.$proc$uart/tx_top.sv:48$4'.
Creating decoders for process `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.$proc$uart/mod_counter.sv:26$34'.
     1/1: $0\count[18:0]

10.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\debounce.\debounced' from process `\debounce.$proc$uart/debounce.sv:0$24'.
No latch inferred for signal `\debounce.\clrTimer' from process `\debounce.$proc$uart/debounce.sv:0$24'.
No latch inferred for signal `\debounce.\ns' from process `\debounce.$proc$uart/debounce.sv:0$24'.
No latch inferred for signal `\tx.\Sent' from process `\tx.$proc$uart/tx.sv:0$18'.
No latch inferred for signal `\tx.\incBit' from process `\tx.$proc$uart/tx.sv:0$18'.
No latch inferred for signal `\tx.\startBit' from process `\tx.$proc$uart/tx.sv:0$18'.
No latch inferred for signal `\tx.\dataBit' from process `\tx.$proc$uart/tx.sv:0$18'.
No latch inferred for signal `\tx.\parityBit' from process `\tx.$proc$uart/tx.sv:0$18'.
No latch inferred for signal `\tx.\clrTimer' from process `\tx.$proc$uart/tx.sv:0$18'.
No latch inferred for signal `\tx.\clrBit' from process `\tx.$proc$uart/tx.sv:0$18'.
No latch inferred for signal `\tx.\ns' from process `\tx.$proc$uart/tx.sv:0$18'.

10.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SRLC32E.\r' using process `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2408$1342'.
  created $dff cell `$procdff$1940' with positive edge clock.
Creating register for signal `\SRLC16E.\r' using process `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2364$1335'.
  created $dff cell `$procdff$1941' with positive edge clock.
Creating register for signal `\SRLC16.\r' using process `\SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2327$1328'.
  created $dff cell `$procdff$1942' with positive edge clock.
Creating register for signal `\SRL16E.\r' using process `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2294$1325'.
  created $dff cell `$procdff$1943' with positive edge clock.
Creating register for signal `\SRL16.\r' using process `\SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2261$1318'.
  created $dff cell `$procdff$1944' with positive edge clock.
Creating register for signal `\RAM64M.\mem_a' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1945' with positive edge clock.
Creating register for signal `\RAM64M.\mem_b' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1946' with positive edge clock.
Creating register for signal `\RAM64M.\mem_c' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1947' with positive edge clock.
Creating register for signal `\RAM64M.\mem_d' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1948' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1117' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1949' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1118' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1950' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1983$1119' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1951' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1120' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1952' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1121' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1953' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1984$1122' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1954' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1123' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1955' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1124' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1956' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1985$1125' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1957' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1126' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1958' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1127' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1959' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1986$1128' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1960' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_a$1134' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1961' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_b$1135' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1962' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_c$1136' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1963' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_d$1137' using process `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
  created $dff cell `$procdff$1964' with positive edge clock.
Creating register for signal `\RAM32M.\mem_a' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1965' with positive edge clock.
Creating register for signal `\RAM32M.\mem_b' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1966' with positive edge clock.
Creating register for signal `\RAM32M.\mem_c' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1967' with positive edge clock.
Creating register for signal `\RAM32M.\mem_d' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1968' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$937' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1969' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$938' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1970' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1809$939' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1971' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$940' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1972' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$941' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1973' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1810$942' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1974' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$943' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1975' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$944' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1976' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1811$945' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1977' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$946' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1978' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$947' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1979' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1812$948' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1980' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_a$962' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1981' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_b$963' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1982' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_c$964' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1983' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_d$965' using process `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
  created $dff cell `$procdff$1984' with positive edge clock.
Creating register for signal `\RAM128X1D.\mem' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$896'.
  created $dff cell `$procdff$1985' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$889' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$896'.
  created $dff cell `$procdff$1986' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$890' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$896'.
  created $dff cell `$procdff$1987' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$891' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$896'.
  created $dff cell `$procdff$1988' with positive edge clock.
Creating register for signal `\RAM128X1D.$lookahead\mem$895' using process `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$896'.
  created $dff cell `$procdff$1989' with positive edge clock.
Creating register for signal `\RAM64X1D.\mem' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$848'.
  created $dff cell `$procdff$1990' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$841' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$848'.
  created $dff cell `$procdff$1991' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$842' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$848'.
  created $dff cell `$procdff$1992' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$843' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$848'.
  created $dff cell `$procdff$1993' with positive edge clock.
Creating register for signal `\RAM64X1D.$lookahead\mem$847' using process `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$848'.
  created $dff cell `$procdff$1994' with positive edge clock.
Creating register for signal `\RAM32X1D_1.\mem' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$821'.
  created $dff cell `$procdff$1995' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$814' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$821'.
  created $dff cell `$procdff$1996' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$815' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$821'.
  created $dff cell `$procdff$1997' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$816' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$821'.
  created $dff cell `$procdff$1998' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$lookahead\mem$820' using process `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$821'.
  created $dff cell `$procdff$1999' with negative edge clock.
Creating register for signal `\RAM32X1D.\mem' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$782'.
  created $dff cell `$procdff$2000' with positive edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$mask$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$775' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$782'.
  created $dff cell `$procdff$2001' with positive edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$data$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$776' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$782'.
  created $dff cell `$procdff$2002' with positive edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$sel$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$777' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$782'.
  created $dff cell `$procdff$2003' with positive edge clock.
Creating register for signal `\RAM32X1D.$lookahead\mem$781' using process `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$782'.
  created $dff cell `$procdff$2004' with positive edge clock.
Creating register for signal `\FDPE_1.\Q' using process `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$645'.
  created $adff cell `$procdff$2005' with negative edge clock and positive level reset.
Creating register for signal `\FDPE.\Q' using process `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$642'.
  created $adff cell `$procdff$2006' with positive edge clock and positive level reset.
Creating register for signal `\FDCE_1.\Q' using process `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$627'.
  created $adff cell `$procdff$2007' with negative edge clock and positive level reset.
Creating register for signal `\FDCE.\Q' using process `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$624'.
  created $adff cell `$procdff$2008' with positive edge clock and positive level reset.
Creating register for signal `\FDSE_1.\Q' using process `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$609'.
  created $dff cell `$procdff$2009' with negative edge clock.
Creating register for signal `\FDSE.\Q' using process `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$605'.
  created $dff cell `$procdff$2010' with positive edge clock.
Creating register for signal `\FDRE_1.\Q' using process `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$587'.
  created $dff cell `$procdff$2011' with negative edge clock.
Creating register for signal `\FDRE.\Q' using process `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$583'.
  created $dff cell `$procdff$2012' with positive edge clock.
Creating register for signal `\debounce.\cs' using process `\debounce.$proc$uart/debounce.sv:90$33'.
  created $dff cell `$procdff$2013' with positive edge clock.
Creating register for signal `\tx.\cs' using process `\tx.$proc$uart/tx.sv:129$23'.
  created $dff cell `$procdff$2014' with positive edge clock.
Creating register for signal `\tx.\Sout' using process `\tx.$proc$uart/tx.sv:48$15'.
  created $dff cell `$procdff$2015' with positive edge clock.
Creating register for signal `\tx.\bitCount' using process `\tx.$proc$uart/tx.sv:40$12'.
  created $dff cell `$procdff$2016' with positive edge clock.
Creating register for signal `\tx.\count' using process `\tx.$proc$uart/tx.sv:30$7'.
  created $dff cell `$procdff$2017' with positive edge clock.
Creating register for signal `\tx_top.\btnc_r' using process `\tx_top.$proc$uart/tx_top.sv:48$4'.
  created $dff cell `$procdff$2018' with positive edge clock.
Creating register for signal `\tx_top.\btnc_r2' using process `\tx_top.$proc$uart/tx_top.sv:48$4'.
  created $dff cell `$procdff$2019' with positive edge clock.
Creating register for signal `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.\count' using process `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.$proc$uart/mod_counter.sv:26$34'.
  created $dff cell `$procdff$2020' with positive edge clock.

10.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

10.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2400$1343'.
Found and cleaned up 1 empty switch in `\SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2408$1342'.
Removing empty process `SRLC32E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2408$1342'.
Removing empty process `SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2356$1336'.
Found and cleaned up 1 empty switch in `\SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2364$1335'.
Removing empty process `SRLC16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2364$1335'.
Removing empty process `SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2324$1329'.
Removing empty process `SRLC16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2327$1328'.
Removing empty process `SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2287$1326'.
Found and cleaned up 1 empty switch in `\SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2294$1325'.
Removing empty process `SRL16E.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2294$1325'.
Removing empty process `SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2259$1319'.
Removing empty process `SRL16.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:2261$1318'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1975$1244'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1974$1243'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1973$1242'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1972$1241'.
Found and cleaned up 1 empty switch in `\RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
Removing empty process `RAM64M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1981$1138'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1801$1092'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1800$1091'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1799$1090'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1798$1089'.
Found and cleaned up 1 empty switch in `\RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
Removing empty process `RAM32M.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1807$966'.
Removing empty process `RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1707$933'.
Found and cleaned up 1 empty switch in `\RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$896'.
Removing empty process `RAM128X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1711$896'.
Removing empty process `RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1602$885'.
Found and cleaned up 1 empty switch in `\RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$848'.
Removing empty process `RAM64X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1606$848'.
Removing empty process `RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1556$840'.
Found and cleaned up 1 empty switch in `\RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$821'.
Removing empty process `RAM32X1D_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1560$821'.
Removing empty process `RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1497$813'.
Found and cleaned up 1 empty switch in `\RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$782'.
Removing empty process `RAM32X1D.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:1501$782'.
Removing empty process `FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$648'.
Found and cleaned up 1 empty switch in `\FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$645'.
Removing empty process `FDPE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:810$645'.
Removing empty process `FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$644'.
Found and cleaned up 1 empty switch in `\FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$642'.
Removing empty process `FDPE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:769$642'.
Removing empty process `FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$630'.
Found and cleaned up 1 empty switch in `\FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$627'.
Removing empty process `FDCE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:731$627'.
Removing empty process `FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$626'.
Found and cleaned up 1 empty switch in `\FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$624'.
Removing empty process `FDCE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:690$624'.
Removing empty process `FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$612'.
Found and cleaned up 2 empty switches in `\FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$609'.
Removing empty process `FDSE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:587$609'.
Removing empty process `FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$608'.
Found and cleaned up 2 empty switches in `\FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$605'.
Removing empty process `FDSE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:554$605'.
Removing empty process `FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$590'.
Found and cleaned up 2 empty switches in `\FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$587'.
Removing empty process `FDRE_1.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:522$587'.
Removing empty process `FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:0$586'.
Found and cleaned up 2 empty switches in `\FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$583'.
Removing empty process `FDRE.$proc$/home/jacobb00/yosys/yosys/share/xilinx/cells_sim.v:489$583'.
Removing empty process `debounce.$proc$uart/debounce.sv:90$33'.
Found and cleaned up 10 empty switches in `\debounce.$proc$uart/debounce.sv:0$24'.
Removing empty process `debounce.$proc$uart/debounce.sv:0$24'.
Removing empty process `tx.$proc$uart/tx.sv:129$23'.
Found and cleaned up 9 empty switches in `\tx.$proc$uart/tx.sv:0$18'.
Removing empty process `tx.$proc$uart/tx.sv:0$18'.
Found and cleaned up 3 empty switches in `\tx.$proc$uart/tx.sv:48$15'.
Removing empty process `tx.$proc$uart/tx.sv:48$15'.
Found and cleaned up 2 empty switches in `\tx.$proc$uart/tx.sv:40$12'.
Removing empty process `tx.$proc$uart/tx.sv:40$12'.
Found and cleaned up 1 empty switch in `\tx.$proc$uart/tx.sv:30$7'.
Removing empty process `tx.$proc$uart/tx.sv:30$7'.
Removing empty process `tx_top.$proc$uart/tx_top.sv:48$4'.
Found and cleaned up 2 empty switches in `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.$proc$uart/mod_counter.sv:26$34'.
Removing empty process `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.$proc$uart/mod_counter.sv:26$34'.
Cleaned up 48 empty switches.

10.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module debounce.
<suppressed ~8 debug messages>
Optimizing module tx.
<suppressed ~4 debug messages>
Optimizing module tx_top.
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.

10.5. Executing TRIBUF pass.

10.6. Executing DEMINOUT pass (demote inout ports to input or output).

10.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.

10.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Removed 3 unused cells and 147 unused wires.
<suppressed ~7 debug messages>

10.9. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter...
Checking module debounce...
Checking module tx...
Checking module tx_top...
Found and reported 0 problems.

10.10. Executing OPT pass (performing simple optimizations).

10.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
<suppressed ~51 debug messages>
Finding identical cells in module `\tx'.
<suppressed ~51 debug messages>
Finding identical cells in module `\tx_top'.
Removed a total of 34 cells.

10.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \debounce..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1598.
    dead port 2/2 on $mux $procmux$1600.
    dead port 1/2 on $mux $procmux$1603.
    dead port 2/2 on $mux $procmux$1609.
    dead port 1/2 on $mux $procmux$1612.
    dead port 1/2 on $mux $procmux$1620.
    dead port 2/2 on $mux $procmux$1623.
    dead port 2/2 on $mux $procmux$1625.
    dead port 1/2 on $mux $procmux$1628.
    dead port 2/2 on $mux $procmux$1636.
    dead port 2/2 on $mux $procmux$1638.
    dead port 1/2 on $mux $procmux$1641.
    dead port 2/2 on $mux $procmux$1648.
    dead port 1/2 on $mux $procmux$1651.
    dead port 2/2 on $mux $procmux$1659.
    dead port 1/2 on $mux $procmux$1662.
    dead port 1/2 on $mux $procmux$1578.
    dead port 1/2 on $mux $procmux$1670.
    dead port 2/2 on $mux $procmux$1580.
    dead port 1/2 on $mux $procmux$1583.
    dead port 1/2 on $mux $procmux$1678.
    dead port 2/2 on $mux $procmux$1588.
    dead port 1/2 on $mux $procmux$1591.
    dead port 1/2 on $mux $procmux$1595.
    dead port 1/2 on $mux $procmux$1686.
Running muxtree optimizer on module \tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1711.
    dead port 1/2 on $mux $procmux$1714.
    dead port 2/2 on $mux $procmux$1722.
    dead port 1/2 on $mux $procmux$1725.
    dead port 1/2 on $mux $procmux$1735.
    dead port 2/2 on $mux $procmux$1737.
    dead port 1/2 on $mux $procmux$1740.
    dead port 1/2 on $mux $procmux$1749.
    dead port 2/2 on $mux $procmux$1751.
    dead port 1/2 on $mux $procmux$1754.
    dead port 2/2 on $mux $procmux$1763.
    dead port 1/2 on $mux $procmux$1766.
    dead port 2/2 on $mux $procmux$1775.
    dead port 1/2 on $mux $procmux$1778.
    dead port 2/2 on $mux $procmux$1788.
    dead port 1/2 on $mux $procmux$1791.
    dead port 2/2 on $mux $procmux$1801.
    dead port 1/2 on $mux $procmux$1804.
    dead port 2/2 on $mux $procmux$1815.
    dead port 1/2 on $mux $procmux$1818.
    dead port 1/2 on $mux $procmux$1829.
    dead port 1/2 on $mux $procmux$1840.
    dead port 1/2 on $mux $procmux$1850.
    dead port 1/2 on $mux $procmux$1858.
    dead port 2/2 on $mux $procmux$1701.
    dead port 1/2 on $mux $procmux$1867.
    dead port 1/2 on $mux $procmux$1877.
    dead port 1/2 on $mux $procmux$1704.
    dead port 1/2 on $mux $procmux$1886.
    dead port 1/2 on $mux $procmux$1892.
Running muxtree optimizer on module \tx_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 55 multiplexer ports.
<suppressed ~17 debug messages>

10.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
  Optimizing cells in module \debounce.
    New ctrl vector for $pmux cell $procmux$1672: { $auto$opt_reduce.cc:134:opt_pmux$2024 $auto$opt_reduce.cc:134:opt_pmux$2022 }
    New ctrl vector for $pmux cell $procmux$1680: { $auto$opt_reduce.cc:134:opt_pmux$2028 $auto$opt_reduce.cc:134:opt_pmux$2026 }
  Optimizing cells in module \debounce.
  Optimizing cells in module \tx.
  Optimizing cells in module \tx_top.
Performed a total of 2 changes.

10.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
Finding identical cells in module `\tx'.
Finding identical cells in module `\tx_top'.
Removed a total of 0 cells.

10.10.6. Executing OPT_DFF pass (perform DFF optimizations).

10.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..
Removed 0 unused cells and 89 unused wires.
<suppressed ~2 debug messages>

10.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.10.9. Rerunning OPT passes. (Maybe there is more to do..)

10.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \debounce..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

10.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
  Optimizing cells in module \debounce.
  Optimizing cells in module \tx.
  Optimizing cells in module \tx_top.
Performed a total of 0 changes.

10.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
Finding identical cells in module `\tx'.
Finding identical cells in module `\tx_top'.
Removed a total of 0 cells.

10.10.13. Executing OPT_DFF pass (perform DFF optimizations).

10.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..

10.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.10.16. Finished OPT passes. (There is nothing left to do.)

10.11. Executing FSM pass (extract and optimize FSM).

10.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register debounce.cs.
Found FSM state register tx.cs.

10.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\cs' from module `\debounce'.
  found $dff cell for state register: $procdff$2013
  root of input selection tree: \ns
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \reset
  found ctrl input: $procmux$1581_CMP
  found ctrl input: $procmux$1601_CMP
  found ctrl input: $procmux$1626_CMP
  found ctrl input: $procmux$1660_CMP
  found ctrl input: \noisy
  found ctrl input: $logic_and$uart/debounce.sv:77$32_Y
  found state code: 2'00
  found state code: 2'11
  found state code: 2'10
  found ctrl input: $logic_and$uart/debounce.sv:59$27_Y
  found ctrl input: $logic_and$uart/debounce.sv:61$28_Y
  found state code: 2'01
  found ctrl output: $procmux$1581_CMP
  found ctrl output: $procmux$1601_CMP
  found ctrl output: $procmux$1626_CMP
  found ctrl output: $procmux$1660_CMP
  ctrl inputs: { $logic_and$uart/debounce.sv:77$32_Y $logic_and$uart/debounce.sv:61$28_Y $logic_and$uart/debounce.sv:59$27_Y \noisy \reset }
  ctrl outputs: { $procmux$1660_CMP $procmux$1626_CMP $procmux$1601_CMP $procmux$1581_CMP \ns }
  transition:       2'00 5'---00 ->       2'00 6'100000
  transition:       2'00 5'---10 ->       2'01 6'100001
  transition:       2'00 5'----1 ->       2'00 6'100000
  transition:       2'10 5'---00 ->       2'11 6'001011
  transition:       2'10 5'---10 ->       2'10 6'001010
  transition:       2'10 5'----1 ->       2'00 6'001000
  transition:       2'01 5'---00 ->       2'00 6'010000
  transition:       2'01 5'-0010 -> INVALID_STATE(2'0x) 6'01000x  <ignored invalid transition!>
  transition:       2'01 5'-1010 ->       2'10 6'010010
  transition:       2'01 5'--110 ->       2'01 6'010001
  transition:       2'01 5'----1 ->       2'00 6'010000
  transition:       2'11 5'0--00 ->       2'00 6'000100
  transition:       2'11 5'1--00 ->       2'11 6'000111
  transition:       2'11 5'---10 ->       2'10 6'000110
  transition:       2'11 5'----1 ->       2'00 6'000100
Extracting FSM `\cs' from module `\tx'.
  found $dff cell for state register: $procdff$2014
  root of input selection tree: \ns
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \Reset
  found ctrl input: $procmux$1702_CMP
  found ctrl input: $procmux$1712_CMP
  found ctrl input: $procmux$1723_CMP
  found ctrl input: $procmux$1738_CMP
  found ctrl input: $procmux$1789_CMP
  found ctrl input: $procmux$1816_CMP
  found ctrl input: \Send
  found state code: 3'000
  found state code: 3'101
  found ctrl input: \timerDone
  found state code: 3'100
  found state code: 3'011
  found ctrl input: $logic_and$uart/tx.sv:96$19_Y
  found state code: 3'010
  found state code: 3'001
  found ctrl output: $procmux$1702_CMP
  found ctrl output: $procmux$1712_CMP
  found ctrl output: $procmux$1723_CMP
  found ctrl output: $procmux$1738_CMP
  found ctrl output: $procmux$1789_CMP
  found ctrl output: $procmux$1816_CMP
  ctrl inputs: { $logic_and$uart/tx.sv:96$19_Y \timerDone \Send \Reset }
  ctrl outputs: { $procmux$1816_CMP $procmux$1789_CMP $procmux$1738_CMP $procmux$1723_CMP $procmux$1712_CMP $procmux$1702_CMP \ns }
  transition:      3'000 4'--00 ->      3'000 9'100000000
  transition:      3'000 4'--10 ->      3'001 9'100000001
  transition:      3'000 4'---1 ->      3'000 9'100000000
  transition:      3'100 4'-0-0 ->      3'100 9'000010100
  transition:      3'100 4'-1-0 ->      3'101 9'000010101
  transition:      3'100 4'---1 ->      3'000 9'000010000
  transition:      3'010 4'0--0 ->      3'010 9'001000010
  transition:      3'010 4'1--0 ->      3'011 9'001000011
  transition:      3'010 4'---1 ->      3'000 9'001000000
  transition:      3'001 4'-0-0 ->      3'001 9'010000001
  transition:      3'001 4'-1-0 ->      3'010 9'010000010
  transition:      3'001 4'---1 ->      3'000 9'010000000
  transition:      3'101 4'--00 ->      3'000 9'000001000
  transition:      3'101 4'--10 ->      3'101 9'000001101
  transition:      3'101 4'---1 ->      3'000 9'000001000
  transition:      3'011 4'-0-0 ->      3'011 9'000100011
  transition:      3'011 4'-1-0 ->      3'100 9'000100100
  transition:      3'011 4'---1 ->      3'000 9'000100000

10.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cs$2029' from module `\debounce'.
Optimizing FSM `$fsm$\cs$2035' from module `\tx'.

10.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..
Removed 29 unused cells and 29 unused wires.
<suppressed ~31 debug messages>

10.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cs$2029' from module `\debounce'.
  Removing unused output signal \ns [0].
  Removing unused output signal \ns [1].
Optimizing FSM `$fsm$\cs$2035' from module `\tx'.
  Removing unused output signal \ns [0].
  Removing unused output signal \ns [1].
  Removing unused output signal \ns [2].
  Removing unused output signal $procmux$1712_CMP.

10.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\cs$2029' from module `\debounce' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\cs$2035' from module `\tx' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----

10.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\cs$2029' from module `debounce':
-------------------------------------

  Information on FSM $fsm$\cs$2029 (\cs):

  Number of input signals:    5
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: \reset
    1: \noisy
    2: $logic_and$uart/debounce.sv:59$27_Y
    3: $logic_and$uart/debounce.sv:61$28_Y
    4: $logic_and$uart/debounce.sv:77$32_Y

  Output signals:
    0: $procmux$1581_CMP
    1: $procmux$1601_CMP
    2: $procmux$1626_CMP
    3: $procmux$1660_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'---00   ->     0 4'1000
      1:     0 5'----1   ->     0 4'1000
      2:     0 5'---10   ->     2 4'1000
      3:     1 5'----1   ->     0 4'0010
      4:     1 5'---10   ->     1 4'0010
      5:     1 5'---00   ->     3 4'0010
      6:     2 5'---00   ->     0 4'0100
      7:     2 5'----1   ->     0 4'0100
      8:     2 5'-1010   ->     1 4'0100
      9:     2 5'--110   ->     2 4'0100
     10:     3 5'0--00   ->     0 4'0001
     11:     3 5'----1   ->     0 4'0001
     12:     3 5'---10   ->     1 4'0001
     13:     3 5'1--00   ->     3 4'0001

-------------------------------------

FSM `$fsm$\cs$2035' from module `tx':
-------------------------------------

  Information on FSM $fsm$\cs$2035 (\cs):

  Number of input signals:    4
  Number of output signals:   5
  Number of state bits:       6

  Input signals:
    0: \Reset
    1: \Send
    2: \timerDone
    3: $logic_and$uart/tx.sv:96$19_Y

  Output signals:
    0: $procmux$1702_CMP
    1: $procmux$1723_CMP
    2: $procmux$1738_CMP
    3: $procmux$1789_CMP
    4: $procmux$1816_CMP

  State encoding:
    0:   6'-----1  <RESET STATE>
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'--00   ->     0 5'10000
      1:     0 4'---1   ->     0 5'10000
      2:     0 4'--10   ->     3 5'10000
      3:     1 4'---1   ->     0 5'00000
      4:     1 4'-0-0   ->     1 5'00000
      5:     1 4'-1-0   ->     4 5'00000
      6:     2 4'---1   ->     0 5'00100
      7:     2 4'0--0   ->     2 5'00100
      8:     2 4'1--0   ->     5 5'00100
      9:     3 4'---1   ->     0 5'01000
     10:     3 4'-1-0   ->     2 5'01000
     11:     3 4'-0-0   ->     3 5'01000
     12:     4 4'--00   ->     0 5'00001
     13:     4 4'---1   ->     0 5'00001
     14:     4 4'--10   ->     4 5'00001
     15:     5 4'---1   ->     0 5'00010
     16:     5 4'-1-0   ->     1 5'00010
     17:     5 4'-0-0   ->     5 5'00010

-------------------------------------

10.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\cs$2029' from module `\debounce'.
Mapping FSM `$fsm$\cs$2035' from module `\tx'.

10.12. Executing OPT pass (performing simple optimizations).

10.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
<suppressed ~4 debug messages>
Optimizing module tx.
<suppressed ~6 debug messages>
Optimizing module tx_top.

10.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
<suppressed ~12 debug messages>
Finding identical cells in module `\tx'.
<suppressed ~15 debug messages>
Finding identical cells in module `\tx_top'.
Removed a total of 9 cells.

10.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \debounce..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

10.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
  Optimizing cells in module \debounce.
  Optimizing cells in module \tx.
  Optimizing cells in module \tx_top.
Performed a total of 0 changes.

10.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
Finding identical cells in module `\tx'.
Finding identical cells in module `\tx_top'.
Removed a total of 0 cells.

10.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$2020 ($dff) from module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter (D = $procmux$1935_Y, Q = \count, rval = 19'0000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$2147 ($sdff) from module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter (D = $add$uart/mod_counter.sv:30$36_Y [18:0], Q = \count).
Adding SRST signal on $procdff$2017 ($dff) from module tx (D = $add$uart/tx.sv:34$9_Y [13:0], Q = \count, rval = 14'00000000000000).
Adding SRST signal on $procdff$2016 ($dff) from module tx (D = $procmux$1927_Y, Q = \bitCount, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2150 ($sdff) from module tx (D = $add$uart/tx.sv:44$13_Y [3:0], Q = \bitCount).
Adding SRST signal on $procdff$2015 ($dff) from module tx (D = $procmux$1922_Y, Q = \Sout, rval = 1'0).

10.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..
Removed 6 unused cells and 33 unused wires.
<suppressed ~11 debug messages>

10.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.12.9. Rerunning OPT passes. (Maybe there is more to do..)

10.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \debounce..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
  Optimizing cells in module \debounce.
  Optimizing cells in module \tx.
  Optimizing cells in module \tx_top.
Performed a total of 0 changes.

10.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
Finding identical cells in module `\tx'.
Finding identical cells in module `\tx_top'.
Removed a total of 0 cells.

10.12.13. Executing OPT_DFF pass (perform DFF optimizations).

10.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..

10.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.12.16. Finished OPT passes. (There is nothing left to do.)

10.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.$add$uart/mod_counter.sv:30$36 ($add).
Removed top 13 bits (of 32) from port Y of cell $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.$add$uart/mod_counter.sv:30$36 ($add).
Removed top 31 bits (of 32) from mux cell $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.$ternary$uart/mod_counter.sv:33$39 ($mux).
Removed top 13 bits (of 32) from wire $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.$add$uart/mod_counter.sv:30$36_Y.
Removed top 31 bits (of 32) from port B of cell tx.$add$uart/tx.sv:34$9 ($add).
Removed top 18 bits (of 32) from port Y of cell tx.$add$uart/tx.sv:34$9 ($add).
Removed top 7 bits (of 14) from port B of cell tx.$eq$uart/tx.sv:37$10 ($eq).
Removed top 31 bits (of 32) from mux cell tx.$ternary$uart/tx.sv:37$11 ($mux).
Removed top 31 bits (of 32) from port B of cell tx.$add$uart/tx.sv:44$13 ($add).
Removed top 28 bits (of 32) from port Y of cell tx.$add$uart/tx.sv:44$13 ($add).
Removed top 1 bits (of 4) from port B of cell tx.$eq$uart/tx.sv:45$14 ($eq).
Removed top 18 bits (of 32) from wire tx.$add$uart/tx.sv:34$9_Y.

10.14. Executing PEEPOPT pass (run peephole optimizers).

10.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

10.16. Executing PMUX2SHIFTX pass.

10.17. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

10.18. Executing TECHMAP pass (map to technology primitives).

10.18.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/mul2dsp.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

10.18.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/xc7_dsp_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/xc7_dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL25X18'.
Successfully finished Verilog frontend.

10.18.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

10.19. Executing OPT_EXPR pass (perform const folding).

10.20. Executing WREDUCE pass (reducing word size of cells).

10.21. Executing XILINX_DSP pass (pack resources into DSPs).

10.22. Executing TECHMAP pass (map to technology primitives).

10.22.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/cmp2lut.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

10.22.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/cmp2lcu.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/cmp2lcu.v' to AST representation.
Generating RTLIL representation for module `\_80_lcu_cmp_'.
Generating RTLIL representation for module `\$__CMP2LCU'.
Successfully finished Verilog frontend.

10.22.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~7 debug messages>

10.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter:
  creating $macc model for $add$uart/mod_counter.sv:30$36 ($add).
  creating $alu model for $macc $add$uart/mod_counter.sv:30$36.
  creating $alu cell for $add$uart/mod_counter.sv:30$36: $auto$alumacc.cc:485:replace_alu$2157
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module debounce:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module tx:
  creating $macc model for $add$uart/tx.sv:34$9 ($add).
  creating $macc model for $add$uart/tx.sv:44$13 ($add).
  creating $alu model for $macc $add$uart/tx.sv:44$13.
  creating $alu model for $macc $add$uart/tx.sv:34$9.
  creating $alu cell for $add$uart/tx.sv:34$9: $auto$alumacc.cc:485:replace_alu$2160
  creating $alu cell for $add$uart/tx.sv:44$13: $auto$alumacc.cc:485:replace_alu$2163
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module tx_top:
  created 0 $alu and 0 $macc cells.

10.24. Executing SHARE pass (SAT-based resource sharing).

10.25. Executing OPT pass (performing simple optimizations).

10.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
Finding identical cells in module `\tx'.
Finding identical cells in module `\tx_top'.
Removed a total of 0 cells.

10.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \debounce..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

10.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
  Optimizing cells in module \debounce.
  Optimizing cells in module \tx.
  Optimizing cells in module \tx_top.
Performed a total of 0 changes.

10.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
Finding identical cells in module `\tx'.
Finding identical cells in module `\tx_top'.
Removed a total of 0 cells.

10.25.6. Executing OPT_DFF pass (perform DFF optimizations).

10.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..

10.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.25.9. Finished OPT passes. (There is nothing left to do.)

10.26. Executing MEMORY pass.

10.26.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

10.26.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

10.26.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

10.26.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

10.26.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

10.26.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..

10.26.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

10.26.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

10.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..

10.26.10. Executing MEMORY_COLLECT pass (generating $mem cells).

10.27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..

10.28. Executing MEMORY_LIBMAP pass (mapping memories to cells).

10.29. Executing TECHMAP pass (map to technology primitives).

10.29.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/lutrams_xc5v_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/lutrams_xc5v_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_SP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_DP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_QP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_OP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_SDP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_64X8SW_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_32X16DR8_'.
Successfully finished Verilog frontend.

10.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~9 debug messages>

10.30. Executing TECHMAP pass (map to technology primitives).

10.30.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/brams_xc6v_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/brams_xc6v_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_BLOCKRAM_TDP_'.
Generating RTLIL representation for module `\$__XILINX_BLOCKRAM_SDP_'.
Successfully finished Verilog frontend.

10.30.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

10.31. Executing OPT pass (performing simple optimizations).

10.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
<suppressed ~1 debug messages>
Optimizing module debounce.
<suppressed ~3 debug messages>
Optimizing module tx.
<suppressed ~10 debug messages>
Optimizing module tx_top.

10.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
Finding identical cells in module `\tx'.
Finding identical cells in module `\tx_top'.
Removed a total of 0 cells.

10.31.3. Executing OPT_DFF pass (perform DFF optimizations).

10.31.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..
Removed 1 unused cells and 11 unused wires.
<suppressed ~4 debug messages>

10.31.5. Finished fast OPT passes.

10.32. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

10.33. Executing OPT pass (performing simple optimizations).

10.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
Finding identical cells in module `\tx'.
Finding identical cells in module `\tx_top'.
Removed a total of 0 cells.

10.33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \debounce..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \tx_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

10.33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
  Optimizing cells in module \debounce.
  Optimizing cells in module \tx.
  Optimizing cells in module \tx_top.
Performed a total of 0 changes.

10.33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
Finding identical cells in module `\debounce'.
Finding identical cells in module `\tx'.
Finding identical cells in module `\tx_top'.
Removed a total of 0 cells.

10.33.6. Executing OPT_SHARE pass.

10.33.7. Executing OPT_DFF pass (perform DFF optimizations).

10.33.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..

10.33.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.33.10. Finished OPT passes. (There is nothing left to do.)

10.34. Executing XILINX_SRL pass (Xilinx shift register extraction).

10.35. Executing TECHMAP pass (map to technology primitives).

10.35.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/techmap.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.35.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/arith_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_xilinx_lcu'.
Generating RTLIL representation for module `\_80_xilinx_alu'.
Successfully finished Verilog frontend.

10.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$674141544fade965cf052b5e9d5b65813fc4e151\_80_xilinx_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:cd83258c7586f89dea16c95441ac2e41d2389dcc$paramod$3e9aa5f6b7ad2b020647b46df1e4d7b7b7fa111e\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $reduce_xnor.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$a97e347dfc5cddc54a0f40403553db7b2f4b3492\_80_xilinx_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$85c3b546236e013020cf2106abd98e7ebbbaf3c6\_80_xilinx_alu for cells of type $alu.
No more expansions possible.
<suppressed ~383 debug messages>

10.36. Executing OPT pass (performing simple optimizations).

10.36.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
<suppressed ~57 debug messages>
Optimizing module debounce.
<suppressed ~12 debug messages>
Optimizing module tx.
<suppressed ~62 debug messages>
Optimizing module tx_top.

10.36.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter'.
<suppressed ~24 debug messages>
Finding identical cells in module `\debounce'.
<suppressed ~21 debug messages>
Finding identical cells in module `\tx'.
<suppressed ~24 debug messages>
Finding identical cells in module `\tx_top'.
Removed a total of 23 cells.

10.36.3. Executing OPT_DFF pass (perform DFF optimizations).

10.36.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter..
Finding unused cells or wires in module \debounce..
Finding unused cells or wires in module \tx..
Finding unused cells or wires in module \tx_top..
Removed 39 unused cells and 106 unused wires.
<suppressed ~42 debug messages>

10.36.5. Finished fast OPT passes.

10.37. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port tx_top.btnc using IBUF.
Mapping port tx_top.btnu using IBUF.
Mapping port tx_top.clk using IBUF.
Mapping port tx_top.led using OBUF.
Mapping port tx_top.pmod_1 using OBUF.
Mapping port tx_top.pmod_2 using OBUF.
Mapping port tx_top.pmod_3 using OBUF.
Mapping port tx_top.pmod_4 using OBUF.
Mapping port tx_top.pmod_gnd using OBUF.
Mapping port tx_top.sw using IBUF.
Mapping port tx_top.tx_debug using OBUF.
Mapping port tx_top.tx_out using OBUF.
Mapping port tx_top.tx_out_2 using OBUF.

10.38. Executing TECHMAP pass (map to technology primitives).

10.38.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/techmap.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.38.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/cells_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$__SHREG_'.
Generating RTLIL representation for module `\$__XILINX_SHREG_'.
Generating RTLIL representation for module `\$__XILINX_MUXF78'.
Successfully finished Verilog frontend.

10.38.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~74 debug messages>
Removed 0 unused cells and 8 unused wires.

10.39. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

10.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing module debounce.
Optimizing module tx.
Optimizing module tx_top.

10.41. Executing ABC pass (technology mapping using ABC).

10.41.1. Extracting gate netlist of module `$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter' to `<abc-temp-dir>/input.blif'..
Extracted 29 gates and 50 wires to a netlist network with 21 inputs and 3 outputs.

10.41.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        8
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:        3
Removing temp directory.

10.41.2. Extracting gate netlist of module `\debounce' to `<abc-temp-dir>/input.blif'..
Extracted 40 gates and 48 wires to a netlist network with 7 inputs and 6 outputs.

10.41.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.41.2.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        6
ABC RESULTS:        internal signals:       35
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        6
Removing temp directory.

10.41.3. Extracting gate netlist of module `\tx' to `<abc-temp-dir>/input.blif'..
Extracted 87 gates and 123 wires to a netlist network with 34 inputs and 14 outputs.

10.41.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.41.3.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       32
ABC RESULTS:        internal signals:       75
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       14
Removing temp directory.

10.41.4. Extracting gate netlist of module `\tx_top' to `<abc-temp-dir>/input.blif'..
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

10.41.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.41.4.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       10
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:       10
Removing temp directory.
Removed 0 unused cells and 185 unused wires.

10.42. Executing TECHMAP pass (map to technology primitives).

10.42.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/ff_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NPP_'.
Generating RTLIL representation for module `\$_DLATCH_PPP_'.
Successfully finished Verilog frontend.

10.42.2. Continuing TECHMAP pass.
Using template $paramod\$_SDFFE_PP0P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_SDFFE_PP0P_.
No more expansions possible.
<suppressed ~79 debug messages>

10.43. Executing XILINX_SRL pass (Xilinx shift register extraction).

10.44. Executing TECHMAP pass (map to technology primitives).

10.44.1. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/lut_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

10.44.2. Executing Verilog-2005 frontend: /home/jacobb00/yosys/yosys/share/xilinx/cells_map.v
Parsing Verilog input from `/home/jacobb00/yosys/yosys/share/xilinx/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$__SHREG_'.
Generating RTLIL representation for module `\$__XILINX_SHREG_'.
Generating RTLIL representation for module `\$__XILINX_MUXF78'.
Successfully finished Verilog frontend.

10.44.3. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$29a63f541842701f2bfdd8afce8aa8ceaaaac8f2\$lut for cells of type $lut.
Using template $paramod$200337237619ba4c0bed9a492562f1d1b57fb569\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$6069048ea7c45159713a0558424cdfb243a46dfe\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$7e1cdf545683685dc578354d667bae26970fd500\$lut for cells of type $lut.
Using template $paramod$251994398653c4cf8de320f1e306e535d5d2d624\$lut for cells of type $lut.
Using template $paramod$a7dad16c080c08c1647c7e1b9706a59a123d8bcd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$f5c5f595015aee4de78d8a59fd7b7003b8956fde\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$276d6699700e4881c9e2c087e6374f4403fa396b\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$bf0916c6d7935eef0257c8c924841f67bcefce14\$lut for cells of type $lut.
Using template $paramod$60bf5f1ffe770cb66e7d1da9f480919dc1cc0866\$lut for cells of type $lut.
Using template $paramod$766efbb9c7d575cb15515df82a34133ea1198fb6\$lut for cells of type $lut.
Using template $paramod$59d010e8f146c0ca35a13f5fd303308cbeb17b4a\$lut for cells of type $lut.
Using template $paramod$834032d3be6b033259d697b329901106d998ee3c\$lut for cells of type $lut.
Using template $paramod$a3d9d50a26c80b5c42d9b864ac52f329113a426e\$lut for cells of type $lut.
Using template $paramod$cda7cf06d81f0851bd57950e87f0eacd51a3e284\$lut for cells of type $lut.
Using template $paramod$692927e279b3d5c42ee4aacb287247c0b34943ed\$lut for cells of type $lut.
Using template $paramod$2f12f6ad65bb6b3f80c9f21484f3a5583d79343a\$lut for cells of type $lut.
Using template $paramod$20378b9c2a349473f19d75e003c8a133851bf905\$lut for cells of type $lut.
Using template $paramod$6474a31b2da0faa69619c2dfbbae8a7ecc7f09da\$lut for cells of type $lut.
Using template $paramod$bdbca9bb9941853cce5c2e083ac22384fcafb5f8\$lut for cells of type $lut.
Using template $paramod$a2b4ddfa3906001b2ef9f2414d79c3048f2a3a6e\$lut for cells of type $lut.
Using template $paramod$4bebbf84260e7950684604d0585c95b527e6487c\$lut for cells of type $lut.
Using template $paramod$c315fd171a22ad0b563d890e3adda172ea240769\$lut for cells of type $lut.
Using template $paramod$f4535f22634139757c392f93683b0465f56620e4\$lut for cells of type $lut.
Using template $paramod$c187115096219bc788e50e334e3a3d6898df0d08\$lut for cells of type $lut.
Using template $paramod$38d2a2bcc73d2ea72c2568e0da203c4189032c5f\$lut for cells of type $lut.
Using template $paramod$2b50782fe8e2b235b61b0fb58b3875dc470739c9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$107906fddf7d89ab854e4846eb6fd13bd75a6fed\$lut for cells of type $lut.
Using template $paramod$23716aa09ed3bf61ffdd7599ca5941804cdab3ca\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$7562591c3bc7c6604ad78ee509201bbf2678b52a\$lut for cells of type $lut.
Using template $paramod$01cbc9f2eb2cc4241ded6de72b111cacf10027fe\$lut for cells of type $lut.
Using template $paramod$a52099cef019bbe114de53cfbdef9b6de0e07cac\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~669 debug messages>

10.45. Executing XILINX_DFFOPT pass (optimize FF control signal usage).
Optimizing FFs in $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
Optimizing FFs in debounce.
Optimizing FFs in tx.
Optimizing FFs in tx_top.

10.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter.
  Optimizing lut $abc$3232$auto$blifparse.cc:515:parse_blif$3234.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (6 -> 0)
  Optimizing lut $abc$3232$auto$blifparse.cc:515:parse_blif$3234.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (6 -> 0)
  Optimizing lut $abc$3232$auto$blifparse.cc:515:parse_blif$3234.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (6 -> 0)
Optimizing LUTs in debounce.
Optimizing LUTs in tx.
  Optimizing lut $abc$3248$auto$blifparse.cc:515:parse_blif$3272.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (6 -> 3)
  Optimizing lut $abc$3248$auto$blifparse.cc:515:parse_blif$3256.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (6 -> 0)
  Optimizing lut $abc$3248$auto$blifparse.cc:515:parse_blif$3251.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (6 -> 0)
  Optimizing lut $abc$3248$auto$blifparse.cc:515:parse_blif$3272.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (6 -> 0)
  Optimizing lut $abc$3248$auto$blifparse.cc:515:parse_blif$3272.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (6 -> 3)
  Optimizing lut $abc$3248$auto$blifparse.cc:515:parse_blif$3272.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (6 -> 3)
  Optimizing lut $abc$3248$auto$blifparse.cc:515:parse_blif$3256.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (6 -> 0)
  Optimizing lut $abc$3248$auto$blifparse.cc:515:parse_blif$3250.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (6 -> 0)
  Optimizing lut $abc$3248$auto$blifparse.cc:515:parse_blif$3256.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (6 -> 0)
Optimizing LUTs in tx_top.

10.47. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting BUFG on tx_top.$iopadmap$clk[0].
Removed 0 unused cells and 482 unused wires.

10.48. Executing HIERARCHY pass (managing design hierarchy).

10.48.1. Analyzing design hierarchy..
Top module:  \tx_top
Used module:     \debounce
Used module:         $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter
Used module:     \tx

10.48.2. Analyzing design hierarchy..
Top module:  \tx_top
Used module:     \debounce
Used module:         $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter
Used module:     \tx
Removed 0 unused modules.

10.49. Printing statistics.

=== $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter ===

   Number of wires:                 15
   Number of wire bits:            129
   Number of public wires:           5
   Number of public wire bits:      23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     CARRY4                          5
     FDRE                           19
     INV                             1
     LUT2                            2
     LUT4                            2
     LUT5                            1
     LUT6                            2
     MUXF7                           2
     MUXF8                           1

   Estimated number of LCs:          5

=== debounce ===

   Number of wires:                 12
   Number of wire bits:             33
   Number of public wires:           8
   Number of public wire bits:      29
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter      1
     FDRE                            4
     LUT3                            2
     LUT5                            2
     LUT6                            2

   Estimated number of LCs:          6

=== tx ===

   Number of wires:                 43
   Number of wire bits:            172
   Number of public wires:          12
   Number of public wire bits:      40
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 72
     CARRY4                          5
     FDRE                           25
     INV                             2
     LUT2                            9
     LUT3                            4
     LUT4                            4
     LUT5                            4
     LUT6                           11
     MUXF7                           6
     MUXF8                           2

   Estimated number of LCs:         24

=== tx_top ===

   Number of wires:                 39
   Number of wire bits:             53
   Number of public wires:          17
   Number of public wire bits:      31
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 42
     BUFG                            1
     FDRE                            2
     IBUF                           11
     INV                            10
     OBUF                           16
     debounce                        1
     tx                              1

   Estimated number of LCs:          0

=== design hierarchy ===

   tx_top                            1
     debounce                        1
       $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter      1
     tx                              1

   Number of wires:                109
   Number of wire bits:            387
   Number of public wires:          42
   Number of public wire bits:     123
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                157
     BUFG                            1
     CARRY4                         10
     FDRE                           50
     IBUF                           11
     INV                            13
     LUT2                           11
     LUT3                            6
     LUT4                            6
     LUT5                            7
     LUT6                           15
     MUXF7                           8
     MUXF8                           3
     OBUF                           16

   Estimated number of LCs:         34

10.50. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter...
Checking module debounce...
Checking module tx...
Checking module tx_top...
Found and reported 0 problems.

11. Executing BLIF backend.


    apply_tmr [options]

Convenience command to run both replicate and insert_voters
    -suffix <string>
        Specify the suffix to be appended to each replicated cell and wire name.
        The default suffix is "TMR"

    -amount <int>
        Total number of copies. The default is 3

    -ports
        When this option is passed, all top level ports will be replicated.

    -voter_type <string>
        Specify the name of the primitive in the design to be used as a voter
        The default is Xilinx's LUT3

    -voter_name <string>
        Specify the name to be appended to each voter
        The default is "VOTER"

    -reduction
        Insert reduction voters

    -ff
        Insert voters after every flip flop

    -verbose
        Print all log messages during voter insertion


    replicate [options]

This command replicates the design. It operates on all modules
in the design except for blackboxes.

    -suffix <string>
        Specify the suffix to be appended to each replicated cell and wire name.
        The default suffix is "TMR"

    -amount <int>
        Total number of copies. The default is 3

    -ports
        When this option is passed, all top level ports will be replicated.

    -verbose
        Print all log messages during replication


    insert_voters [options]

This command inserts voters into a replicated the design.
It operates on all modules in the design except for blackboxes.

    -suffix <string>
        Specify the suffix to be appended to each inserted voter.
        The default suffix is "TMR"

    -amount <int>
        Total number of copies in the replicated design.
        The default is 3

    -voter_type <string>
        Specify the name of the primitive in the design to be used as a voter
        The default is Xilinx's LUT3

    -voter_name <string>
        Specify the name to be appended to each voter
        The default is "VOTER"

    -reduction
        Insert reduction voters

    -ff
        Insert voters after every flip flop

    -verbose
        Print all log messages during voter insertion

12. Executing REPLICATE Pass
Replicating module: $paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter

Checking replication of \$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter module
Replication of module \$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter passed check

Replicating module: debounce

Checking replication of debounce module
Replication of module debounce passed check

Replicating module: tx

Checking replication of tx module
Replication of module tx passed check

Replicating module: tx_top

Checking replication of tx_top module
Replication of module tx_top passed check

13. Executing BLIF backend.

14. Executing CHECK pass (checking for obvious problems).
Checking module \$paramod$af89ed8d08c8018cd41487cbf58ed920a4905fc9\mod_counter...
Checking module debounce...
Checking module tx...
Checking module tx_top...
Found and reported 0 problems.

15. Executing INSERT_VOTERS Pass
